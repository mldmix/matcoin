m4trace:/usr/share/aclocal-1.15/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.15'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.15.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.15/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.15.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.15/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.15/cond-if.m4:23: -1- AC_DEFUN([AM_COND_IF], [m4_ifndef([_AM_COND_VALUE_$1],
	   [m4_fatal([$0: no such condition "$1"])])dnl
_AM_COND_IF([$1])dnl
if test -z "$$1_TRUE"; then :
  m4_n([$2])[]dnl
m4_ifval([$3],
[_AM_COND_ELSE([$1])dnl
else
  $3
])dnl
_AM_COND_ENDIF([$1])dnl
fi[]dnl
])
m4trace:/usr/share/aclocal-1.15/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.15/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.15/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.15/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.15/depout.m4:12: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "$am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.15/depout.m4:71: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.15/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <http://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.15/init.m4:186: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.15/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.15/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.15/maintainer.m4:16: -1- AC_DEFUN([AM_MAINTAINER_MODE], [m4_case(m4_default([$1], [disable]),
       [enable], [m4_define([am_maintainer_other], [disable])],
       [disable], [m4_define([am_maintainer_other], [enable])],
       [m4_define([am_maintainer_other], [enable])
        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])
AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
  dnl maintainer-mode's default is 'disable' unless 'enable' is passed
  AC_ARG_ENABLE([maintainer-mode],
    [AS_HELP_STRING([--]am_maintainer_other[-maintainer-mode],
      am_maintainer_other[ make rules and dependencies not useful
      (and sometimes confusing) to the casual installer])],
    [USE_MAINTAINER_MODE=$enableval],
    [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))
  AC_MSG_RESULT([$USE_MAINTAINER_MODE])
  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
  MAINT=$MAINTAINER_MODE_TRUE
  AC_SUBST([MAINT])dnl

])
m4trace:/usr/share/aclocal-1.15/make.m4:12: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from 'make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.15/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.15/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.15/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.15/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.15/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.15/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.15/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.15/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.15/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.15/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.15/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.15/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.15/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.15/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.15/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:build-aux/m4/ax_boost_base.m4:38: -1- AC_DEFUN([AX_BOOST_BASE], [
AC_ARG_WITH([boost],
  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],
    [use Boost library from a standard location (ARG=yes),
     from the specified location (ARG=<path>),
     or disable it (ARG=no)
     @<:@ARG=yes@:>@ ])],
    [
    if test "$withval" = "no"; then
        want_boost="no"
    elif test "$withval" = "yes"; then
        want_boost="yes"
        ac_boost_path=""
    else
        want_boost="yes"
        ac_boost_path="$withval"
    fi
    ],
    [want_boost="yes"])


AC_ARG_WITH([boost-libdir],
        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],
        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),
        [
        if test -d "$withval"
        then
                ac_boost_lib_path="$withval"
        else
                AC_MSG_ERROR(--with-boost-libdir expected directory name)
        fi
        ],
        [ac_boost_lib_path=""]
)

if test "x$want_boost" = "xyes"; then
    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)
    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\([[0-9]]*\.[[0-9]]*\)'`
    boost_lib_version_req_major=`expr $boost_lib_version_req : '\([[0-9]]*\)'`
    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\.\([[0-9]]*\)'`
    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\.[[0-9]]*\.\([[0-9]]*\)'`
    if test "x$boost_lib_version_req_sub_minor" = "x" ; then
        boost_lib_version_req_sub_minor="0"
        fi
    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \* 100000 \+  $boost_lib_version_req_minor \* 100 \+ $boost_lib_version_req_sub_minor`
    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)
    succeeded=no

    dnl On 64-bit systems check for system libraries in both lib64 and lib.
    dnl The former is specified by FHS, but e.g. Debian does not adhere to
    dnl this (as it rises problems for generic multi-arch support).
    dnl The last entry in the list is chosen by default when no libraries
    dnl are found, e.g. when only header-only libraries are installed!
    libsubdirs="lib"
    ax_arch=`uname -m`
    case $ax_arch in
      x86_64)
        libsubdirs="lib64 libx32 lib lib64"
        ;;
      ppc64|s390x|sparc64|aarch64|ppc64le)
        libsubdirs="lib64 lib lib64"
        ;;
    esac

    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give
    dnl them priority over the other paths since, if libs are found there, they
    dnl are almost assuredly the ones desired.
    AC_REQUIRE([AC_CANONICAL_HOST])
    libsubdirs="lib/${host_cpu}-${host_os} $libsubdirs"

    case ${host_cpu} in
      i?86)
        libsubdirs="lib/i386-${host_os} $libsubdirs"
        ;;
    esac

    dnl some arches may advertise a cpu type that doesn't line up with their
    dnl prefix's cpu type. For example, uname may report armv7l while libs are
    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's
    dnl value for an extra chance of finding the correct path.
    libsubdirs="lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs"

    dnl first we check the system location for boost libraries
    dnl this location ist chosen if boost libraries are installed with the --layout=system option
    dnl or if you install boost with RPM
    if test "$ac_boost_path" != ""; then
        BOOST_CPPFLAGS="-I$ac_boost_path/include"
        for ac_boost_path_tmp in $libsubdirs; do
                if test -d "$ac_boost_path"/"$ac_boost_path_tmp" ; then
                        BOOST_LDFLAGS="-L$ac_boost_path/$ac_boost_path_tmp"
                        break
                fi
        done
    elif test "$cross_compiling" != yes; then
        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do
            if test -d "$ac_boost_path_tmp/include/boost" && test -r "$ac_boost_path_tmp/include/boost"; then
                for libsubdir in $libsubdirs ; do
                    if ls "$ac_boost_path_tmp/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                done
                BOOST_LDFLAGS="-L$ac_boost_path_tmp/$libsubdir"
                BOOST_CPPFLAGS="-I$ac_boost_path_tmp/include"
                break;
            fi
        done
    fi

    dnl overwrite ld flags if we have required special directory with
    dnl --with-boost-libdir parameter
    if test "$ac_boost_lib_path" != ""; then
       BOOST_LDFLAGS="-L$ac_boost_lib_path"
    fi

    CPPFLAGS_SAVED="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
    export CPPFLAGS

    LDFLAGS_SAVED="$LDFLAGS"
    LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
    export LDFLAGS

    AC_REQUIRE([AC_PROG_CXX])
    AC_LANG_PUSH(C++)
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    @%:@include <boost/version.hpp>
    ]], [[
    #if BOOST_VERSION >= $WANT_BOOST_VERSION
    // Everything is okay
    #else
    #  error Boost version is too old
    #endif
    ]])],[
        AC_MSG_RESULT(yes)
    succeeded=yes
    found_system=yes
        ],[
        ])
    AC_LANG_POP([C++])



    dnl if we found no boost with system layout we search for boost libraries
    dnl built and installed without the --layout=system option or for a staged(not installed) version
    if test "x$succeeded" != "xyes"; then
        CPPFLAGS="$CPPFLAGS_SAVED"
        LDFLAGS="$LDFLAGS_SAVED"
        BOOST_CPPFLAGS=
        BOOST_LDFLAGS=
        _version=0
        if test "$ac_boost_path" != ""; then
            if test -d "$ac_boost_path" && test -r "$ac_boost_path"; then
                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do
                    _version_tmp=`echo $i | sed "s#$ac_boost_path##" | sed 's/\/include\/boost-//' | sed 's/_/./'`
                    V_CHECK=`expr $_version_tmp \> $_version`
                    if test "$V_CHECK" = "1" ; then
                        _version=$_version_tmp
                    fi
                    VERSION_UNDERSCORE=`echo $_version | sed 's/\./_/'`
                    BOOST_CPPFLAGS="-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE"
                done
                dnl if nothing found search for layout used in Windows distributions
                if test -z "$BOOST_CPPFLAGS"; then
                    if test -d "$ac_boost_path/boost" && test -r "$ac_boost_path/boost"; then
                        BOOST_CPPFLAGS="-I$ac_boost_path"
                    fi
                fi
            fi
        else
            if test "$cross_compiling" != yes; then
                for ac_boost_path in /usr /usr/local /opt /opt/local ; do
                    if test -d "$ac_boost_path" && test -r "$ac_boost_path"; then
                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do
                            _version_tmp=`echo $i | sed "s#$ac_boost_path##" | sed 's/\/include\/boost-//' | sed 's/_/./'`
                            V_CHECK=`expr $_version_tmp \> $_version`
                            if test "$V_CHECK" = "1" ; then
                                _version=$_version_tmp
                                best_path=$ac_boost_path
                            fi
                        done
                    fi
                done

                VERSION_UNDERSCORE=`echo $_version | sed 's/\./_/'`
                BOOST_CPPFLAGS="-I$best_path/include/boost-$VERSION_UNDERSCORE"
                if test "$ac_boost_lib_path" = ""; then
                    for libsubdir in $libsubdirs ; do
                        if ls "$best_path/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                    done
                    BOOST_LDFLAGS="-L$best_path/$libsubdir"
                fi
            fi

            if test "x$BOOST_ROOT" != "x"; then
                for libsubdir in $libsubdirs ; do
                    if ls "$BOOST_ROOT/stage/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                done
                if test -d "$BOOST_ROOT" && test -r "$BOOST_ROOT" && test -d "$BOOST_ROOT/stage/$libsubdir" && test -r "$BOOST_ROOT/stage/$libsubdir"; then
                    version_dir=`expr //$BOOST_ROOT : '.*/\(.*\)'`
                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`
                        stage_version_shorten=`expr $stage_version : '\([[0-9]]*\.[[0-9]]*\)'`
                    V_CHECK=`expr $stage_version_shorten \>\= $_version`
                    if test "$V_CHECK" = "1" -a "$ac_boost_lib_path" = "" ; then
                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)
                        BOOST_CPPFLAGS="-I$BOOST_ROOT"
                        BOOST_LDFLAGS="-L$BOOST_ROOT/stage/$libsubdir"
                    fi
                fi
            fi
        fi

        CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
        export CPPFLAGS
        LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
        export LDFLAGS

        AC_LANG_PUSH(C++)
            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        @%:@include <boost/version.hpp>
        ]], [[
        #if BOOST_VERSION >= $WANT_BOOST_VERSION
        // Everything is okay
        #else
        #  error Boost version is too old
        #endif
        ]])],[
            AC_MSG_RESULT(yes)
        succeeded=yes
        found_system=yes
            ],[
            ])
        AC_LANG_POP([C++])
    fi

    if test "$succeeded" != "yes" ; then
        if test "$_version" = "0" ; then
            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])
        else
            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])
        fi
        # execute ACTION-IF-NOT-FOUND (if present):
        ifelse([$3], , :, [$3])
    else
        AC_SUBST(BOOST_CPPFLAGS)
        AC_SUBST(BOOST_LDFLAGS)
        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])
        # execute ACTION-IF-FOUND (if present):
        ifelse([$2], , :, [$2])
    fi

    CPPFLAGS="$CPPFLAGS_SAVED"
    LDFLAGS="$LDFLAGS_SAVED"
fi

])
m4trace:build-aux/m4/ax_boost_chrono.m4:34: -1- AC_DEFUN([AX_BOOST_CHRONO], [
	AC_ARG_WITH([boost-chrono],
	AS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],
                   [use the Chrono library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_chrono_lib=""
        else
		    want_boost="yes"
		ax_boost_user_chrono_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
        AC_REQUIRE([AC_CANONICAL_BUILD])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::Chrono library is available,
					   ax_cv_boost_chrono,
        [AC_LANG_PUSH([C++])
			 CXXFLAGS_SAVE=$CXXFLAGS

			 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],
                                   [[boost::chrono::system_clock::time_point* time = new boost::chrono::system_clock::time_point; delete time;]])],
                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)
			 CXXFLAGS=$CXXFLAGS_SAVE
             AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_chrono" = "xyes"; then
			AC_SUBST(BOOST_CPPFLAGS)

			AC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`

			LDFLAGS_SAVE=$LDFLAGS
            if test "x$ax_boost_user_chrono_lib" = "x"; then
                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\(boost_chrono.*\)\.so.*$;\1;' -e 's;^lib\(boost_chrono.*\)\.dylib.*$;\1;' -e 's;^lib\(boost_chrono.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_CHRONO_LIB="-l$ax_lib"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono="yes"; break],
                                 [link_chrono="no"])
				done
                if test "x$link_chrono" != "xyes"; then
                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\(boost_chrono.*\)\.dll.*$;\1;' -e 's;^\(boost_chrono.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_CHRONO_LIB="-l$ax_lib"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono="yes"; break],
                                 [link_chrono="no"])
				done
                fi

            else
               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do
				      AC_CHECK_LIB($ax_lib, exit,
                                   [BOOST_CHRONO_LIB="-l$ax_lib"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono="yes"; break],
                                   [link_chrono="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the library!)
            fi
			if test "x$link_chrono" = "xno"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:build-aux/m4/ax_boost_filesystem.m4:36: -1- AC_DEFUN([AX_BOOST_FILESYSTEM], [
	AC_ARG_WITH([boost-filesystem],
	AS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],
                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_filesystem_lib=""
        else
		    want_boost="yes"
		ax_boost_user_filesystem_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

		LIBS_SAVED=$LIBS
		LIBS="$LIBS $BOOST_SYSTEM_LIB"
		export LIBS

        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,
					   ax_cv_boost_filesystem,
        [AC_LANG_PUSH([C++])
         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],
                                   [[using namespace boost::filesystem;
                                   path my_path( "foo/bar/data.txt" );
                                   return 0;]])],
					       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)
         AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_filesystem" = "xyes"; then
			AC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`
            ax_lib=
            if test "x$ax_boost_user_filesystem_lib" = "x"; then
                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_FILESYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem="yes"; break],
                                 [link_filesystem="no"])
				done
                if test "x$link_filesystem" != "xyes"; then
                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_FILESYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem="yes"; break],
                                 [link_filesystem="no"])
				done
		    fi
            else
               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do
				      AC_CHECK_LIB($ax_lib, exit,
                                   [BOOST_FILESYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem="yes"; break],
                                   [link_filesystem="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)
            fi
			if test "x$link_filesystem" != "xyes"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
		LDFLAGS="$LDFLAGS_SAVED"
		LIBS="$LIBS_SAVED"
	fi
])
m4trace:build-aux/m4/ax_boost_system.m4:36: -1- AC_DEFUN([AX_BOOST_SYSTEM], [
	AC_ARG_WITH([boost-system],
	AS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],
                   [use the System library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-system=boost_system-gcc-mt ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_system_lib=""
        else
		    want_boost="yes"
		ax_boost_user_system_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
        AC_REQUIRE([AC_CANONICAL_BUILD])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::System library is available,
					   ax_cv_boost_system,
        [AC_LANG_PUSH([C++])
			 CXXFLAGS_SAVE=$CXXFLAGS
			 CXXFLAGS=

			 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],
				    [[boost::system::error_category *a = 0;]])],
                   ax_cv_boost_system=yes, ax_cv_boost_system=no)
			 CXXFLAGS=$CXXFLAGS_SAVE
             AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_system" = "xyes"; then
			AC_SUBST(BOOST_CPPFLAGS)

			AC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`

			LDFLAGS_SAVE=$LDFLAGS
            if test "x$ax_boost_user_system_lib" = "x"; then
                ax_lib=
                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_SYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_SYSTEM_LIB) link_system="yes"; break],
                                 [link_system="no"])
				done
                if test "x$link_system" != "xyes"; then
                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_SYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_SYSTEM_LIB) link_system="yes"; break],
                                 [link_system="no"])
				done
                fi

            else
               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do
				      AC_CHECK_LIB($ax_lib, exit,
                                   [BOOST_SYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_SYSTEM_LIB) link_system="yes"; break],
                                   [link_system="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the boost_system library!)
            fi
			if test "x$link_system" = "xno"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:build-aux/m4/ax_boost_thread.m4:35: -1- AC_DEFUN([AX_BOOST_THREAD], [
	AC_ARG_WITH([boost-thread],
	AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],
                   [use the Thread library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_thread_lib=""
        else
		    want_boost="yes"
		ax_boost_user_thread_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
        AC_REQUIRE([AC_CANONICAL_BUILD])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::Thread library is available,
					   ax_cv_boost_thread,
        [AC_LANG_PUSH([C++])
			 CXXFLAGS_SAVE=$CXXFLAGS

			 if test "x$host_os" = "xsolaris" ; then
				 CXXFLAGS="-pthreads $CXXFLAGS"
			 elif test "x$host_os" = "xmingw32" ; then
				 CXXFLAGS="-mthreads $CXXFLAGS"
			 else
				CXXFLAGS="-pthread $CXXFLAGS"
			 fi
			 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],
                                   [[boost::thread_group thrds;
                                   return 0;]])],
                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)
			 CXXFLAGS=$CXXFLAGS_SAVE
             AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_thread" = "xyes"; then
           if test "x$host_os" = "xsolaris" ; then
			  BOOST_CPPFLAGS="-pthreads $BOOST_CPPFLAGS"
		   elif test "x$host_os" = "xmingw32" ; then
			  BOOST_CPPFLAGS="-mthreads $BOOST_CPPFLAGS"
		   else
			  BOOST_CPPFLAGS="-pthread $BOOST_CPPFLAGS"
		   fi

			AC_SUBST(BOOST_CPPFLAGS)

			AC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`

			LDFLAGS_SAVE=$LDFLAGS
                        case "x$host_os" in
                          *bsd* )
                               LDFLAGS="-pthread $LDFLAGS"
                          break;
                          ;;
                        esac
            if test "x$ax_boost_user_thread_lib" = "x"; then
                ax_lib=
                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\..*,,'`; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_THREAD_LIB="-l$ax_lib"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
                                 [link_thread="no"])
				done
                if test "x$link_thread" != "xyes"; then
                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\..*,,'`; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_THREAD_LIB="-l$ax_lib"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
                                 [link_thread="no"])
				done
                fi

            else
               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do
				      AC_CHECK_LIB($ax_lib, exit,
                                   [BOOST_THREAD_LIB="-l$ax_lib"; AC_SUBST(BOOST_THREAD_LIB) link_thread="yes"; break],
                                   [link_thread="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the boost_thread library!)
            fi
			if test "x$link_thread" = "xno"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
                        else
                           case "x$host_os" in
                              *bsd* )
				BOOST_LDFLAGS="-pthread $BOOST_LDFLAGS"
                              break;
                              ;;
                           esac

			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:build-aux/m4/ax_boost_unit_test_framework.m4:34: -1- AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK], [
	AC_ARG_WITH([boost-unit-test-framework],
	AS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],
                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_unit_test_framework_lib=""
        else
		    want_boost="yes"
		ax_boost_user_unit_test_framework_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,
					   ax_cv_boost_unit_test_framework,
        [AC_LANG_PUSH([C++])
			 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],
                                    [[using boost::unit_test::test_suite;
							 test_suite* test= BOOST_TEST_SUITE( "Unit test example 1" ); if (test == NULL) { return 1; } else { return 0; }]])],
                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)
         AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_unit_test_framework" = "xyes"; then
			AC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`

            if test "x$ax_boost_user_unit_test_framework_lib" = "x"; then
			saved_ldflags="${LDFLAGS}"
                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do
                    if test -r $monitor_library ; then
                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\(boost_unit_test_framework.*\)\.so.*$;\1;' -e 's;^lib\(boost_unit_test_framework.*\)\.dylib.*$;\1;' -e 's;^lib\(boost_unit_test_framework.*\)\.a.*$;\1;'`
                       ax_lib=${libextension}
                       link_unit_test_framework="yes"
                    else
                       link_unit_test_framework="no"
                    fi

			    if test "x$link_unit_test_framework" = "xyes"; then
                      BOOST_UNIT_TEST_FRAMEWORK_LIB="-l$ax_lib"
                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)
					  break
				    fi
                done
                if test "x$link_unit_test_framework" != "xyes"; then
                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\(boost_unit_test_framework.*\)\.dll.*$;\1;' -e 's;^\(boost_unit_test_framework.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB="-l$ax_lib"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework="yes"; break],
                                 [link_unit_test_framework="no"])
				done
                fi
            else
                link_unit_test_framework="no"
			saved_ldflags="${LDFLAGS}"
                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do
                   if test "x$link_unit_test_framework" = "xyes"; then
                      break;
                   fi
                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do
                   if test -r $unittest_library ; then
                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\(boost_unit_test_framework.*\)\.so.*$;\1;' -e 's;^lib\(boost_unit_test_framework.*\)\.a*$;\1;'`
                       ax_lib=${libextension}
                       link_unit_test_framework="yes"
                    else
                       link_unit_test_framework="no"
                    fi

				if test "x$link_unit_test_framework" = "xyes"; then
                        BOOST_UNIT_TEST_FRAMEWORK_LIB="-l$ax_lib"
                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)
					    break
				    fi
                  done
               done
            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the library!)
            fi
			if test "x$link_unit_test_framework" != "xyes"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:build-aux/m4/ax_check_compile_flag.m4:60: -1- AC_DEFUN([AX_CHECK_COMPILE_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:build-aux/m4/ax_check_link_flag.m4:60: -1- AC_DEFUN([AX_CHECK_LINK_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl
AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [
  ax_check_save_flags=$LDFLAGS
  LDFLAGS="$LDFLAGS $4 $1"
  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  LDFLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:build-aux/m4/ax_check_preproc_flag.m4:60: -1- AC_DEFUN([AX_CHECK_PREPROC_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl
AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [
  ax_check_save_flags=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS $4 $1"
  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  CPPFLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:build-aux/m4/ax_cxx_compile_stdcxx.m4:47: -1- AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl
  m4_if([$1], [11], [],
        [$1], [14], [],
        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],
        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$2], [], [],
        [$2], [ext], [],
        [$2], [noext], [],
        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],
        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],
        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],
        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])
  m4_if([$4], [], [ax_cxx_compile_cxx$1_try_default=true],
        [$4], [default], [ax_cxx_compile_cxx$1_try_default=true],
        [$4], [nodefault], [ax_cxx_compile_cxx$1_try_default=false],
        [m4_fatal([invalid fourth argument `$4' to AX_CXX_COMPILE_STDCXX])])
  AC_LANG_PUSH([C++])dnl
  ac_success=no

  m4_if([$4], [nodefault], [], [dnl
  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,
  ax_cv_cxx_compile_cxx$1,
  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
    [ax_cv_cxx_compile_cxx$1=yes],
    [ax_cv_cxx_compile_cxx$1=no])])
  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then
    ac_success=yes
  fi])

  m4_if([$2], [noext], [], [dnl
  if test x$ac_success = xno; then
    for switch in -std=gnu++$1 -std=gnu++0x; do
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])

  m4_if([$2], [ext], [], [dnl
  if test x$ac_success = xno; then
    dnl HP's aCC needs +std=c++11 according to:
    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf
    dnl Cray's crayCC needs "-h std=c++11"
    for switch in -std=c++$1 -std=c++0x +std=c++$1 "-h std=c++$1"; do
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])
  AC_LANG_POP([C++])
  if test x$ax_cxx_compile_cxx$1_required = xtrue; then
    if test x$ac_success = xno; then
      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])
    fi
  fi
  if test x$ac_success = xno; then
    HAVE_CXX$1=0
    AC_MSG_NOTICE([No compiler with C++$1 support was found])
  else
    HAVE_CXX$1=1
    AC_DEFINE(HAVE_CXX$1,1,
              [define if the compiler supports basic C++$1 syntax])
  fi
  AC_SUBST(HAVE_CXX$1)
])
m4trace:build-aux/m4/ax_gcc_func_attribute.m4:79: -1- AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [
    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])

    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [
        AC_LINK_IFELSE([AC_LANG_PROGRAM([
            m4_case([$1],
                [alias], [
                    int foo( void ) { return 0; }
                    int bar( void ) __attribute__(($1("foo")));
                ],
                [aligned], [
                    int foo( void ) __attribute__(($1(32)));
                ],
                [alloc_size], [
                    void *foo(int a) __attribute__(($1(1)));
                ],
                [always_inline], [
                    inline __attribute__(($1)) int foo( void ) { return 0; }
                ],
                [artificial], [
                    inline __attribute__(($1)) int foo( void ) { return 0; }
                ],
                [cold], [
                    int foo( void ) __attribute__(($1));
                ],
                [const], [
                    int foo( void ) __attribute__(($1));
                ],
                [constructor_priority], [
                    int foo( void ) __attribute__((__constructor__(65535/2)));
                ],
                [constructor], [
                    int foo( void ) __attribute__(($1));
                ],
                [deprecated], [
                    int foo( void ) __attribute__(($1("")));
                ],
                [destructor], [
                    int foo( void ) __attribute__(($1));
                ],
                [dllexport], [
                    __attribute__(($1)) int foo( void ) { return 0; }
                ],
                [dllimport], [
                    int foo( void ) __attribute__(($1));
                ],
                [error], [
                    int foo( void ) __attribute__(($1("")));
                ],
                [externally_visible], [
                    int foo( void ) __attribute__(($1));
                ],
                [flatten], [
                    int foo( void ) __attribute__(($1));
                ],
                [format], [
                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));
                ],
                [format_arg], [
                    char *foo(const char *p) __attribute__(($1(1)));
                ],
                [gnu_inline], [
                    inline __attribute__(($1)) int foo( void ) { return 0; }
                ],
                [hot], [
                    int foo( void ) __attribute__(($1));
                ],
                [ifunc], [
                    int my_foo( void ) { return 0; }
                    static int (*resolve_foo(void))(void) { return my_foo; }
                    int foo( void ) __attribute__(($1("resolve_foo")));
                ],
                [leaf], [
                    __attribute__(($1)) int foo( void ) { return 0; }
                ],
                [malloc], [
                    void *foo( void ) __attribute__(($1));
                ],
                [noclone], [
                    int foo( void ) __attribute__(($1));
                ],
                [noinline], [
                    __attribute__(($1)) int foo( void ) { return 0; }
                ],
                [nonnull], [
                    int foo(char *p) __attribute__(($1(1)));
                ],
                [noreturn], [
                    void foo( void ) __attribute__(($1));
                ],
                [nothrow], [
                    int foo( void ) __attribute__(($1));
                ],
                [optimize], [
                    __attribute__(($1(3))) int foo( void ) { return 0; }
                ],
                [pure], [
                    int foo( void ) __attribute__(($1));
                ],
                [unused], [
                    int foo( void ) __attribute__(($1));
                ],
                [used], [
                    int foo( void ) __attribute__(($1));
                ],
                [visibility], [
                    int foo_def( void ) __attribute__(($1("default")));
                    int foo_hid( void ) __attribute__(($1("hidden")));
                    int foo_int( void ) __attribute__(($1("internal")));
                    int foo_pro( void ) __attribute__(($1("protected")));
                ],
                [warning], [
                    int foo( void ) __attribute__(($1("")));
                ],
                [warn_unused_result], [
                    int foo( void ) __attribute__(($1));
                ],
                [weak], [
                    int foo( void ) __attribute__(($1));
                ],
                [weakref], [
                    static int foo( void ) { return 0; }
                    static int bar( void ) __attribute__(($1("foo")));
                ],
                [
                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])
                 int foo( void ) __attribute__(($1));
                ]
            )], [])
            ],
            dnl GCC doesn't exit with an error if an unknown attribute is
            dnl provided but only outputs a warning, so accept the attribute
            dnl only if no warning were issued.
            [AS_IF([test -s conftest.err],
                [AS_VAR_SET([ac_var], [no])],
                [AS_VAR_SET([ac_var], [yes])])],
            [AS_VAR_SET([ac_var], [no])])
    ])

    AS_IF([test yes = AS_VAR_GET([ac_var])],
        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,
            [Define to 1 if the system has the `$1' function attribute])], [])

    AS_VAR_POPDEF([ac_var])
])
m4trace:build-aux/m4/ax_pthread.m4:87: -1- AU_DEFUN([ACX_PTHREAD], [m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])])
m4trace:build-aux/m4/ax_pthread.m4:87: -1- AC_DEFUN([ACX_PTHREAD], [AC_DIAGNOSE([obsolete], [The macro `ACX_PTHREAD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])])
m4trace:build-aux/m4/ax_pthread.m4:88: -1- AC_DEFUN([AX_PTHREAD], [
AC_REQUIRE([AC_CANONICAL_HOST])
AC_REQUIRE([AC_PROG_CC])
AC_REQUIRE([AC_PROG_SED])
AC_LANG_PUSH([C])
ax_pthread_ok=no

# We used to check for pthread.h first, but this fails if pthread.h
# requires special compiler flags (e.g. on Tru64 or Sequent).
# It gets checked for in the link test anyway.

# First of all, check if the user has set any of the PTHREAD_LIBS,
# etcetera environment variables, and if threads linking works using
# them:
if test "x$PTHREAD_CFLAGS$PTHREAD_LIBS" != "x"; then
        ax_pthread_save_CC="$CC"
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        AS_IF([test "x$PTHREAD_CC" != "x"], [CC="$PTHREAD_CC"])
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"
        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])
        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])
        AC_MSG_RESULT([$ax_pthread_ok])
        if test "x$ax_pthread_ok" = "xno"; then
                PTHREAD_LIBS=""
                PTHREAD_CFLAGS=""
        fi
        CC="$ax_pthread_save_CC"
        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"
fi

# We must check for the threads library under a number of different
# names; the ordering is very important because some systems
# (e.g. DEC) have both -lpthread and -lpthreads, where one of the
# libraries is broken (non-POSIX).

# Create a list of thread flags to try.  Items starting with a "-" are
# C compiler flags, and other items are library names, except for "none"
# which indicates that we try without any flags at all, and "pthread-config"
# which is a program returning the flags for the Pth emulation library.

ax_pthread_flags="pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config"

# The ordering *is* (sometimes) important.  Some notes on the
# individual items follow:

# pthreads: AIX (must check this before -lpthread)
# none: in case threads are in libc; should be tried before -Kthread and
#       other compiler flags to prevent continual compiler warnings
# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)
# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64
#           (Note: HP C rejects this with "bad form for `-t' option")
# -pthreads: Solaris/gcc (Note: HP C also rejects)
# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
#      doesn't hurt to check since this sometimes defines pthreads and
#      -D_REENTRANT too), HP C (must be checked before -lpthread, which
#      is present but should not be used directly; and before -mthreads,
#      because the compiler interprets this as "-mt" + "-hreads")
# -mthreads: Mingw32/gcc, Lynx/gcc
# pthread: Linux, etcetera
# --thread-safe: KAI C++
# pthread-config: use pthread-config program (for GNU Pth library)

case $host_os in

        freebsd*)

        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)
        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)

        ax_pthread_flags="-kthread lthread $ax_pthread_flags"
        ;;

        hpux*)

        # From the cc(1) man page: "[-mt] Sets various -D flags to enable
        # multi-threading and also sets -lpthread."

        ax_pthread_flags="-mt -pthread pthread $ax_pthread_flags"
        ;;

        openedition*)

        # IBM z/OS requires a feature-test macro to be defined in order to
        # enable POSIX threads at all, so give the user a hint if this is
        # not set. (We don't define these ourselves, as they can affect
        # other portions of the system API in unpredictable ways.)

        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],
            [
#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)
             AX_PTHREAD_ZOS_MISSING
#            endif
            ],
            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])
        ;;

        solaris*)

        # On Solaris (at least, for some versions), libc contains stubbed
        # (non-functional) versions of the pthreads routines, so link-based
        # tests will erroneously succeed. (N.B.: The stubs are missing
        # pthread_cleanup_push, or rather a function called by this macro,
        # so we could check for that, but who knows whether they'll stub
        # that too in a future libc.)  So we'll check first for the
        # standard Solaris way of linking pthreads (-mt -lpthread).

        ax_pthread_flags="-mt,pthread pthread $ax_pthread_flags"
        ;;
esac

# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)

AS_IF([test "x$GCC" = "xyes"],
      [ax_pthread_flags="-pthread -pthreads $ax_pthread_flags"])

# The presence of a feature test macro requesting re-entrant function
# definitions is, on some systems, a strong hint that pthreads support is
# correctly enabled

case $host_os in
        darwin* | hpux* | linux* | osf* | solaris*)
        ax_pthread_check_macro="_REENTRANT"
        ;;

        aix*)
        ax_pthread_check_macro="_THREAD_SAFE"
        ;;

        *)
        ax_pthread_check_macro="--"
        ;;
esac
AS_IF([test "x$ax_pthread_check_macro" = "x--"],
      [ax_pthread_check_cond=0],
      [ax_pthread_check_cond="!defined($ax_pthread_check_macro)"])

# Are we compiling with Clang?

AC_CACHE_CHECK([whether $CC is Clang],
    [ax_cv_PTHREAD_CLANG],
    [ax_cv_PTHREAD_CLANG=no
     # Note that Autoconf sets GCC=yes for Clang as well as GCC
     if test "x$GCC" = "xyes"; then
        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],
            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */
#            if defined(__clang__) && defined(__llvm__)
             AX_PTHREAD_CC_IS_CLANG
#            endif
            ],
            [ax_cv_PTHREAD_CLANG=yes])
     fi
    ])
ax_pthread_clang="$ax_cv_PTHREAD_CLANG"

ax_pthread_clang_warning=no

# Clang needs special handling, because older versions handle the -pthread
# option in a rather... idiosyncratic way

if test "x$ax_pthread_clang" = "xyes"; then

        # Clang takes -pthread; it has never supported any other flag

        # (Note 1: This will need to be revisited if a system that Clang
        # supports has POSIX threads in a separate library.  This tends not
        # to be the way of modern systems, but it's conceivable.)

        # (Note 2: On some systems, notably Darwin, -pthread is not needed
        # to get POSIX threads support; the API is always present and
        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But
        # -pthread does define _REENTRANT, and while the Darwin headers
        # ignore this macro, third-party headers might not.)

        PTHREAD_CFLAGS="-pthread"
        PTHREAD_LIBS=

        ax_pthread_ok=yes

        # However, older versions of Clang make a point of warning the user
        # that, in an invocation where only linking and no compilation is
        # taking place, the -pthread option has no effect ("argument unused
        # during compilation").  They expect -pthread to be passed in only
        # when source code is being compiled.
        #
        # Problem is, this is at odds with the way Automake and most other
        # C build frameworks function, which is that the same flags used in
        # compilation (CFLAGS) are also used in linking.  Many systems
        # supported by AX_PTHREAD require exactly this for POSIX threads
        # support, and in fact it is often not straightforward to specify a
        # flag that is used only in the compilation phase and not in
        # linking.  Such a scenario is extremely rare in practice.
        #
        # Even though use of the -pthread flag in linking would only print
        # a warning, this can be a nuisance for well-run software projects
        # that build with -Werror.  So if the active version of Clang has
        # this misfeature, we search for an option to squash it.

        AC_CACHE_CHECK([whether Clang needs flag to prevent "argument unused" warning when linking with -pthread],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown
             # Create an alternate version of $ac_link that compiles and
             # links in two steps (.c -> .o, .o -> exe) instead of one
             # (.c -> exe), because the warning occurs only in the second
             # step
             ax_pthread_save_ac_link="$ac_link"
             ax_pthread_sed='s/conftest\.\$ac_ext/conftest.$ac_objext/g'
             ax_pthread_link_step=`$as_echo "$ac_link" | sed "$ax_pthread_sed"`
             ax_pthread_2step_ac_link="($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)"
             ax_pthread_save_CFLAGS="$CFLAGS"
             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do
                AS_IF([test "x$ax_pthread_try" = "xunknown"], [break])
                CFLAGS="-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS"
                ac_link="$ax_pthread_save_ac_link"
                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                    [ac_link="$ax_pthread_2step_ac_link"
                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                         [break])
                    ])
             done
             ac_link="$ax_pthread_save_ac_link"
             CFLAGS="$ax_pthread_save_CFLAGS"
             AS_IF([test "x$ax_pthread_try" = "x"], [ax_pthread_try=no])
             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG="$ax_pthread_try"
            ])

        case "$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG" in
                no | unknown) ;;
                *) PTHREAD_CFLAGS="$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS" ;;
        esac

fi # $ax_pthread_clang = yes

if test "x$ax_pthread_ok" = "xno"; then
for ax_pthread_try_flag in $ax_pthread_flags; do

        case $ax_pthread_try_flag in
                none)
                AC_MSG_CHECKING([whether pthreads work without any flags])
                ;;

                -mt,pthread)
                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])
                PTHREAD_CFLAGS="-mt"
                PTHREAD_LIBS="-lpthread"
                ;;

                -*)
                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])
                PTHREAD_CFLAGS="$ax_pthread_try_flag"
                ;;

                pthread-config)
                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])
                AS_IF([test "x$ax_pthread_config" = "xno"], [continue])
                PTHREAD_CFLAGS="`pthread-config --cflags`"
                PTHREAD_LIBS="`pthread-config --ldflags` `pthread-config --libs`"
                ;;

                *)
                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])
                PTHREAD_LIBS="-l$ax_pthread_try_flag"
                ;;
        esac

        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Check for various functions.  We must include pthread.h,
        # since some functions may be macros.  (On the Sequent, we
        # need a special flag -Kthread to make this header compile.)
        # We check for pthread_join because it is in -lpthread on IRIX
        # while pthread_create is in libc.  We check for pthread_attr_init
        # due to DEC craziness with -lpthreads.  We check for
        # pthread_cleanup_push because it is one of the few pthread
        # functions on Solaris that doesn't have a non-functional libc stub.
        # We try pthread_create on general principles.

        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>
#                       if $ax_pthread_check_cond
#                        error "$ax_pthread_check_macro must be defined"
#                       endif
                        static void routine(void *a) { a = 0; }
                        static void *start_routine(void *a) { return a; }],
                       [pthread_t th; pthread_attr_t attr;
                        pthread_create(&th, 0, start_routine, 0);
                        pthread_join(th, 0);
                        pthread_attr_init(&attr);
                        pthread_cleanup_push(routine, 0);
                        pthread_cleanup_pop(0) /* ; */])],
            [ax_pthread_ok=yes],
            [])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        AC_MSG_RESULT([$ax_pthread_ok])
        AS_IF([test "x$ax_pthread_ok" = "xyes"], [break])

        PTHREAD_LIBS=""
        PTHREAD_CFLAGS=""
done
fi

# Various other checks:
if test "x$ax_pthread_ok" = "xyes"; then
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.
        AC_CACHE_CHECK([for joinable pthread attribute],
            [ax_cv_PTHREAD_JOINABLE_ATTR],
            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown
             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do
                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],
                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],
                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],
                                [])
             done
            ])
        AS_IF([test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xunknown" && \
               test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xPTHREAD_CREATE_JOINABLE" && \
               test "x$ax_pthread_joinable_attr_defined" != "xyes"],
              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],
                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],
                                  [Define to necessary symbol if this constant
                                   uses a non-standard name on your system.])
               ax_pthread_joinable_attr_defined=yes
              ])

        AC_CACHE_CHECK([whether more special flags are required for pthreads],
            [ax_cv_PTHREAD_SPECIAL_FLAGS],
            [ax_cv_PTHREAD_SPECIAL_FLAGS=no
             case $host_os in
             solaris*)
             ax_cv_PTHREAD_SPECIAL_FLAGS="-D_POSIX_PTHREAD_SEMANTICS"
             ;;
             esac
            ])
        AS_IF([test "x$ax_cv_PTHREAD_SPECIAL_FLAGS" != "xno" && \
               test "x$ax_pthread_special_flags_added" != "xyes"],
              [PTHREAD_CFLAGS="$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS"
               ax_pthread_special_flags_added=yes])

        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],
            [ax_cv_PTHREAD_PRIO_INHERIT],
            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],
                                             [[int i = PTHREAD_PRIO_INHERIT;]])],
                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],
                            [ax_cv_PTHREAD_PRIO_INHERIT=no])
            ])
        AS_IF([test "x$ax_cv_PTHREAD_PRIO_INHERIT" = "xyes" && \
               test "x$ax_pthread_prio_inherit_defined" != "xyes"],
              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])
               ax_pthread_prio_inherit_defined=yes
              ])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        # More AIX lossage: compile with *_r variant
        if test "x$GCC" != "xyes"; then
            case $host_os in
                aix*)
                AS_CASE(["x/$CC"],
                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],
                    [#handle absolute path differently from PATH based program lookup
                     AS_CASE(["x$CC"],
                         [x/*],
                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC="${CC}_r"])],
                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])
                ;;
            esac
        fi
fi

test -n "$PTHREAD_CC" || PTHREAD_CC="$CC"

AC_SUBST([PTHREAD_LIBS])
AC_SUBST([PTHREAD_CFLAGS])
AC_SUBST([PTHREAD_CC])

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test "x$ax_pthread_ok" = "xyes"; then
        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])
        :
else
        ax_pthread_ok=no
        $2
fi
AC_LANG_POP
])
m4trace:build-aux/m4/bitcoin_find_bdb48.m4:5: -1- AC_DEFUN([BITCOIN_FIND_BDB48], [
  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])
  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])

  if test "x$BDB_CFLAGS" = "x"; then
    AC_MSG_CHECKING([for Berkeley DB C++ headers])
    BDB_CPPFLAGS=
    bdbpath=X
    bdb48path=X
    bdbdirlist=
    for _vn in 4.8 48 4 5 5.3 ''; do
      for _pfx in b lib ''; do
        bdbdirlist="$bdbdirlist ${_pfx}db${_vn}"
      done
    done
    for searchpath in $bdbdirlist ''; do
      test -n "${searchpath}" && searchpath="${searchpath}/"
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <${searchpath}db_cxx.h>
      ]],[[
        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)
          #error "failed to find bdb 4.8+"
        #endif
      ]])],[
        if test "x$bdbpath" = "xX"; then
          bdbpath="${searchpath}"
        fi
      ],[
        continue
      ])
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <${searchpath}db_cxx.h>
      ]],[[
        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)
          #error "failed to find bdb 4.8"
        #endif
      ]])],[
        bdb48path="${searchpath}"
        break
      ],[])
    done
    if test "x$bdbpath" = "xX"; then
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])
    elif test "x$bdb48path" = "xX"; then
      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)
      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[
        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])
      ],[
        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])
      ])
    else
      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)
      bdbpath="${bdb48path}"
    fi
  else
    BDB_CPPFLAGS=${BDB_CFLAGS}
  fi
  AC_SUBST(BDB_CPPFLAGS)
  
  if test "x$BDB_LIBS" = "x"; then
    # TODO: Ideally this could find the library version and make sure it matches the headers being used
    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do
      AC_CHECK_LIB([$searchlib],[main],[
        BDB_LIBS="-l${searchlib}"
        break
      ])
    done
    if test "x$BDB_LIBS" = "x"; then
        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])
    fi
  fi
  AC_SUBST(BDB_LIBS)
])
m4trace:build-aux/m4/bitcoin_qt.m4:7: -1- AC_DEFUN([BITCOIN_QT_FAIL], [
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    AC_MSG_ERROR([$1])
  fi
])
m4trace:build-aux/m4/bitcoin_qt.m4:19: -1- AC_DEFUN([BITCOIN_QT_CHECK], [
  if test "x$bitcoin_enable_qt" != xno && test "x$bitcoin_qt_want_version" != xno; then
    true
    $1
  else
    true
    $2
  fi
])
m4trace:build-aux/m4/bitcoin_qt.m4:36: -1- AC_DEFUN([BITCOIN_QT_PATH_PROGS], [
  BITCOIN_QT_CHECK([
    if test "x$3" != x; then
      AC_PATH_PROGS($1,$2,,$3)
    else
      AC_PATH_PROGS($1,$2)
    fi
    if test "x$$1" = x && test "x$4" != xyes; then
      BITCOIN_QT_FAIL([$1 not found])
    fi
  ])
])
m4trace:build-aux/m4/bitcoin_qt.m4:53: -1- AC_DEFUN([BITCOIN_QT_INIT], [
  dnl enable qt support
  AC_ARG_WITH([gui],
    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],
    [build bitcoin-qt GUI (default=auto)])],
    [
     bitcoin_qt_want_version=$withval
     if test "x$bitcoin_qt_want_version" = xyes; then
       bitcoin_qt_force=yes
       bitcoin_qt_want_version=auto
     fi
    ],
    [bitcoin_qt_want_version=auto])

  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])
  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])
  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])
  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])
  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])

  AC_ARG_WITH([qtdbus],
    [AS_HELP_STRING([--with-qtdbus],
    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],
    [use_dbus=$withval],
    [use_dbus=auto])

  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)
])
m4trace:build-aux/m4/bitcoin_qt.m4:89: -1- AC_DEFUN([BITCOIN_QT_CONFIGURE], [
  use_pkgconfig=$1

  if test "x$use_pkgconfig" = x; then
    use_pkgconfig=yes
  fi

  if test "x$use_pkgconfig" = xyes; then
    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG])
  else
    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])
  fi

  dnl This is ugly and complicated. Yuck. Works as follows:
  dnl For Qt5, we can check a header to find out whether Qt is build
  dnl statically. When Qt is built statically, some plugins must be linked into
  dnl the final binary as well.
  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was
  dnl added.
  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the
  dnl results to QT_LIBS.
  BITCOIN_QT_CHECK([
  TEMP_CPPFLAGS=$CPPFLAGS
  TEMP_CXXFLAGS=$CXXFLAGS
  CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
  CXXFLAGS="$PIC_FLAGS $CXXFLAGS"
  _BITCOIN_QT_IS_STATIC
  if test "x$bitcoin_cv_static_qt" = xyes; then
    _BITCOIN_QT_FIND_STATIC_PLUGINS
    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])
    AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
          #include <QtCore/qconfig.h>
          #ifndef QT_VERSION
          #  include <QtCore/qglobal.h>
          #endif
        ]],
        [[
          #if QT_VERSION >= 0x050400
          choke
          #endif
        ]])],
      [bitcoin_cv_need_acc_widget=yes],
      [bitcoin_cv_need_acc_widget=no])
    ])
    if test "x$bitcoin_cv_need_acc_widget" = xyes; then
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])
    fi
    _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])
    AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])
    if test "x$TARGET_OS" = xwindows; then
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])
      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])
    elif test "x$TARGET_OS" = xlinux; then
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])
      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])
    elif test "x$TARGET_OS" = xdarwin; then
      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS="$QT_LIBS -framework IOKit"],[AC_MSG_ERROR(could not iokit framework)])
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])
      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])
    fi
  fi
  CPPFLAGS=$TEMP_CPPFLAGS
  CXXFLAGS=$TEMP_CXXFLAGS
  ])

  if test "x$use_pkgconfig$qt_bin_path" = xyes; then
    qt_bin_path="`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`"
  fi

  if test "x$use_hardening" != xno; then
    BITCOIN_QT_CHECK([
    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)
    TEMP_CPPFLAGS=$CPPFLAGS
    TEMP_CXXFLAGS=$CXXFLAGS
    CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
    CXXFLAGS="$PIE_FLAGS $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QtCore/qconfig.h>
        #ifndef QT_VERSION
        #  include <QtCore/qglobal.h>
        #endif
      ]],
      [[
        #if defined(QT_REDUCE_RELOCATIONS)
        choke
        #endif
      ]])],
      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],
      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]
    )
    CPPFLAGS=$TEMP_CPPFLAGS
    CXXFLAGS=$TEMP_CXXFLAGS
    ])
  else
    BITCOIN_QT_CHECK([
    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)
    TEMP_CPPFLAGS=$CPPFLAGS
    CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QtCore/qconfig.h>
        #ifndef QT_VERSION
        #  include <QtCore/qglobal.h>
        #endif
      ]],
      [[
        #if defined(QT_REDUCE_RELOCATIONS)
        choke
        #endif
      ]])],
      [ AC_MSG_RESULT(no)],
      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]
    )
    CPPFLAGS=$TEMP_CPPFLAGS
    ])
  fi

  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)
  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)
  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)
  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)
  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)

  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'
  case $host in
    *darwin*)
     BITCOIN_QT_CHECK([
       MOC_DEFS="${MOC_DEFS} -DQ_OS_MAC"
       base_frameworks="-framework Foundation -framework ApplicationServices -framework AppKit"
       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS="$QT_LIBS $base_frameworks"],[AC_MSG_ERROR(could not find base frameworks)])
     ])
    ;;
    *mingw*)
       BITCOIN_QT_CHECK([
         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS="$QT_LDFLAGS -mwindows"],[AC_MSG_WARN(-mwindows linker support not detected)])
       ])
  esac


  dnl enable qt support
  AC_MSG_CHECKING(whether to build AC_PACKAGE_NAME GUI)
  BITCOIN_QT_CHECK([
    bitcoin_enable_qt=yes
    bitcoin_enable_qt_test=yes
    if test "x$have_qt_test" = xno; then
      bitcoin_enable_qt_test=no
    fi
    bitcoin_enable_qt_dbus=no
    if test "x$use_dbus" != xno && test "x$have_qt_dbus" = xyes; then
      bitcoin_enable_qt_dbus=yes
    fi
    if test "x$use_dbus" = xyes && test "x$have_qt_dbus" = xno; then
      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])
    fi
    if test "x$LUPDATE" = x; then
      AC_MSG_WARN([lupdate is required to update qt translations])
    fi
  ],[
    bitcoin_enable_qt=no
  ])
  AC_MSG_RESULT([$bitcoin_enable_qt (Qt5)])

  AC_SUBST(QT_PIE_FLAGS)
  AC_SUBST(QT_INCLUDES)
  AC_SUBST(QT_LIBS)
  AC_SUBST(QT_LDFLAGS)
  AC_SUBST(QT_DBUS_INCLUDES)
  AC_SUBST(QT_DBUS_LIBS)
  AC_SUBST(QT_TEST_INCLUDES)
  AC_SUBST(QT_TEST_LIBS)
  AC_SUBST(QT_SELECT, qt5)
  AC_SUBST(MOC_DEFS)
])
m4trace:build-aux/m4/bitcoin_qt.m4:270: -1- AC_DEFUN([_BITCOIN_QT_CHECK_QT5], [
  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
      #include <QtCore/qconfig.h>
      #ifndef QT_VERSION
      #  include <QtCore/qglobal.h>
      #endif
    ]],
    [[
      #if QT_VERSION < 0x050200 || QT_VERSION_MAJOR < 5
      choke
      #endif
    ]])],
    [bitcoin_cv_qt5=yes],
    [bitcoin_cv_qt5=no])
])])
m4trace:build-aux/m4/bitcoin_qt.m4:290: -1- AC_DEFUN([_BITCOIN_QT_CHECK_QT58], [
  AC_CACHE_CHECK(for > Qt 5.7, bitcoin_cv_qt58,[
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
      #include <QtCore/qconfig.h>
      #ifndef QT_VERSION
      #  include <QtCore/qglobal.h>
      #endif
    ]],
    [[
      #if QT_VERSION_MINOR < 8
      choke
      #endif
    ]])],
    [bitcoin_cv_qt58=yes],
    [bitcoin_cv_qt58=no])
])])
m4trace:build-aux/m4/bitcoin_qt.m4:313: -1- AC_DEFUN([_BITCOIN_QT_IS_STATIC], [
  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QtCore/qconfig.h>
        #ifndef QT_VERSION OR QT_VERSION_STR
        #  include <QtCore/qglobal.h>
        #endif
      ]],
      [[
        #if !defined(QT_STATIC)
        choke
        #endif
      ]])],
      [bitcoin_cv_static_qt=yes],
      [bitcoin_cv_static_qt=no])
    ])
  if test "x$bitcoin_cv_static_qt" = xyes; then
    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])
  fi
])
m4trace:build-aux/m4/bitcoin_qt.m4:339: -1- AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS], [
  AC_MSG_CHECKING(for static Qt plugins: $2)
  CHECK_STATIC_PLUGINS_TEMP_LIBS="$LIBS"
  LIBS="$2 $QT_LIBS $LIBS"
  AC_LINK_IFELSE([AC_LANG_PROGRAM([[
    #define QT_STATICPLUGIN
    #include <QtPlugin>
    $1]],
    [[return 0;]])],
    [AC_MSG_RESULT(yes); QT_LIBS="$2 $QT_LIBS"],
    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])
  LIBS="$CHECK_STATIC_PLUGINS_TEMP_LIBS"
])
m4trace:build-aux/m4/bitcoin_qt.m4:356: -1- AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS], [
    if test "x$qt_plugin_path" != x; then
      QT_LIBS="$QT_LIBS -L$qt_plugin_path/platforms"
      if test -d "$qt_plugin_path/accessible"; then
        QT_LIBS="$QT_LIBS -L$qt_plugin_path/accessible"
      fi
     if test "x$use_pkgconfig" = xyes; then
     : dnl
     m4_ifdef([PKG_CHECK_MODULES],[
       if test x$bitcoin_cv_qt58 = xno; then
         PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS="$QTPLATFORM_LIBS $QT_LIBS"])
       else
         PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS="-lQt5FontDatabaseSupport $QT_LIBS"])
         PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS="-lQt5EventDispatcherSupport $QT_LIBS"])
         PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS="-lQt5ThemeSupport $QT_LIBS"])
         PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS="-lQt5DeviceDiscoverySupport $QT_LIBS"])
         PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS="-lQt5AccessibilitySupport $QT_LIBS"])
         PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS="-lQt5FbSupport $QT_LIBS"])
                fi
       if test "x$TARGET_OS" = xlinux; then
         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS="$X11XCB_LIBS $QT_LIBS"])
         if ${PKG_CONFIG} --exists "Qt5Core >= 5.5" 2>/dev/null; then
           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS="$QTXCBQPA_LIBS $QT_LIBS"])
         fi
       elif test "x$TARGET_OS" = xdarwin; then
         PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS="-lQt5ClipboardSupport $QT_LIBS"])
         PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS="-lQt5GraphicsSupport $QT_LIBS"])
         PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS="-lQt5CglSupport $QT_LIBS"])
       fi
     ])
     else
       if test "x$TARGET_OS" = xwindows; then
         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[
           AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
               #include <QtCore/qconfig.h>
               #ifndef QT_VERSION
               #  include <QtCore/qglobal.h>
               #endif
             ]],
             [[
               #if QT_VERSION < 0x050600 || QT_VERSION_MINOR < 6
               choke
               #endif
             ]])],
           [bitcoin_cv_need_platformsupport=yes],
           [bitcoin_cv_need_platformsupport=no])
         ])
         if test "x$bitcoin_cv_need_platformsupport" = xyes; then
           if test x$bitcoin_cv_qt58 = xno; then
             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))
           else
             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}FontDatabaseSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXFontDatabaseSupport not found)))
             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}EventDispatcherSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXEventDispatcherSupport not found)))
             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}ThemeSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXThemeSupport not found)))
             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}FbSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXFbSupport not found)))
             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}DeviceDiscoverySupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXDeviceDiscoverySupport not found)))
             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}AccessibilitySupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXAccessibilitySupport not found)))
             QT_LIBS="$QT_LIBS -lversion -ldwmapi -luxtheme"
           fi
         fi
       fi
     fi
   fi
])
m4trace:build-aux/m4/bitcoin_qt.m4:428: -1- AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG], [
  m4_ifdef([PKG_CHECK_MODULES],[
    QT_LIB_PREFIX=Qt5
    qt5_modules="Qt5Core Qt5Gui Qt5Network Qt5Widgets"
    BITCOIN_QT_CHECK([
      PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES="$QT5_CFLAGS"; QT_LIBS="$QT5_LIBS" have_qt=yes],[have_qt=no])

      if test "x$have_qt" != xyes; then
        have_qt=no
        BITCOIN_QT_FAIL([Qt dependencies not found])
      fi
    ])
    BITCOIN_QT_CHECK([
      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES="$QT_TEST_CFLAGS"; have_qt_test=yes], [have_qt_test=no])
      if test "x$use_dbus" != xno; then
        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES="$QT_DBUS_CFLAGS"; have_qt_dbus=yes], [have_qt_dbus=no])
      fi
    ])
  ])
  true; dnl
])
m4trace:build-aux/m4/bitcoin_qt.m4:456: -1- AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG], [
  TEMP_CPPFLAGS="$CPPFLAGS"
  TEMP_CXXFLAGS="$CXXFLAGS"
  CXXFLAGS="$PIC_FLAGS $CXXFLAGS"
  TEMP_LIBS="$LIBS"
  BITCOIN_QT_CHECK([
    if test "x$qt_include_path" != x; then
      QT_INCLUDES="-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus"
      CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
    fi
  ])

  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])
  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])
  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])

  BITCOIN_QT_CHECK([
    if test "x$bitcoin_qt_want_version" = xauto; then
      _BITCOIN_QT_CHECK_QT5
      _BITCOIN_QT_CHECK_QT58
    fi
    QT_LIB_PREFIX=Qt5
  ])

  BITCOIN_QT_CHECK([
    LIBS=
    if test "x$qt_lib_path" != x; then
      LIBS="$LIBS -L$qt_lib_path"
    fi

    if test "x$TARGET_OS" = xwindows; then
      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))
    fi
  ])

  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))
  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))
  if test x$bitcoin_cv_qt58 = xno; then
    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))
    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))
  else
    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtlibpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))
    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre2_match_16], [qtpcre2 libqtpcre2],,AC_MSG_WARN([libqtpcre2 not found. Assuming qt has it built-in])))
  fi
  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng qtharfbuzz harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))
  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Core not found)))
  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Gui not found)))
  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Network not found)))
  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))
  QT_LIBS="$LIBS"
  LIBS="$TEMP_LIBS"

  BITCOIN_QT_CHECK([
    LIBS=
    if test "x$qt_lib_path" != x; then
      LIBS="-L$qt_lib_path"
    fi
    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)
    AC_CHECK_HEADER([QTest],, have_qt_test=no)
    QT_TEST_LIBS="$LIBS"
    if test "x$use_dbus" != xno; then
      LIBS=
      if test "x$qt_lib_path" != x; then
        LIBS="-L$qt_lib_path"
      fi
      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)
      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)
      QT_DBUS_LIBS="$LIBS"
    fi
  ])
  CPPFLAGS="$TEMP_CPPFLAGS"
  CXXFLAGS="$TEMP_CXXFLAGS"
  LIBS="$TEMP_LIBS"
])
m4trace:build-aux/m4/bitcoin_subdir_to_include.m4:7: -1- AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE], [
  if test "x$2" = "x"; then
    AC_MSG_RESULT([default])
  else
    echo "#include <$2$3.h>" >conftest.cpp
    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\n\\r\\\\' | sed -e 's/^.*[[:space:]:]\(\/[^[:space:]]*\)]$3[\.h[[:space:]].*$/\1/' -e t -e d`]
    AC_MSG_RESULT([${newinclpath}])
    if test "x${newinclpath}" != "x"; then
      eval "$1=\"\$$1\"' -I${newinclpath}'"
    fi
  fi
])
m4trace:build-aux/m4/l_atomic.m4:25: -1- AC_DEFUN([CHECK_ATOMIC], [

  AC_LANG_PUSH(C++)

  AC_MSG_CHECKING([whether std::atomic can be used without link library])

  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[
      AC_MSG_RESULT([yes])
    ],[
      AC_MSG_RESULT([no])
      LIBS="$LIBS -latomic"
      AC_MSG_CHECKING([whether std::atomic needs -latomic])
      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[
          AC_MSG_RESULT([yes])
        ],[
          AC_MSG_RESULT([no])
          AC_MSG_FAILURE([cannot figure out how to use std::atomic])
        ])
    ])

  AC_LANG_POP
])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:12: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:12: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:16: -1- AC_CONFIG_MACRO_DIR([build-aux/m4])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:40: -1- AM_INIT_AUTOMAKE([no-define subdir-objects foreign])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:40: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:40: -1- AM_AUTOMAKE_VERSION([1.15.1])
m4trace:configure.ac:40: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:40: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:40: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:40: -1- _AM_SET_OPTIONS([no-define subdir-objects foreign])
m4trace:configure.ac:40: -1- _AM_SET_OPTION([no-define])
m4trace:configure.ac:40: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:40: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:40: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:40: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:40: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:40: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:40: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:40: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:40: -1- AM_SANITY_CHECK
m4trace:configure.ac:40: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:40: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:40: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:40: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:40: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:40: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:40: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:40: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:40: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:40: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:40: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:40: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:40: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:40: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:40: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:40: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:40: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:40: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:40: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:40: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:40: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:40: -1- AM_SILENT_RULES
m4trace:configure.ac:40: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:40: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:40: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:44: -1- AM_MAINTAINER_MODE([enable])
m4trace:configure.ac:44: -1- AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
m4trace:configure.ac:44: -1- m4_pattern_allow([^MAINTAINER_MODE_TRUE$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^MAINTAINER_MODE_FALSE$])
m4trace:configure.ac:44: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_TRUE])
m4trace:configure.ac:44: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_FALSE])
m4trace:configure.ac:44: -1- m4_pattern_allow([^MAINT$])
m4trace:configure.ac:47: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:47: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:47: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:47: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:47: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:47: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:47: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:47: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:47: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:47: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:55: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:55: -1- AM_SET_DEPDIR
m4trace:configure.ac:55: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:55: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:55: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:55: -1- AM_DEP_TRACK
m4trace:configure.ac:55: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:55: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:55: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:55: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:66: -1- AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])
m4trace:configure.ac:66: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:66: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:68: -1- CHECK_ATOMIC
m4trace:configure.ac:72: -1- m4_pattern_allow([^OBJCXX$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^OBJCXXFLAGS$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^OBJCXX$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^ac_ct_OBJCXX$])
m4trace:configure.ac:72: -1- _AM_DEPENDENCIES([OBJCXX])
m4trace:configure.ac:72: -1- m4_pattern_allow([^OBJCXXDEPMODE$])
m4trace:configure.ac:72: -1- AM_CONDITIONAL([am__fastdepOBJCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_OBJCXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:72: -1- m4_pattern_allow([^am__fastdepOBJCXX_TRUE$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^am__fastdepOBJCXX_FALSE$])
m4trace:configure.ac:72: -1- _AM_SUBST_NOTMAKE([am__fastdepOBJCXX_TRUE])
m4trace:configure.ac:72: -1- _AM_SUBST_NOTMAKE([am__fastdepOBJCXX_FALSE])
m4trace:configure.ac:83: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:86: -1- m4_pattern_allow([^GCOV$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^LCOV$])
m4trace:configure.ac:89: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^GENHTML$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^GIT$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^CCACHE$])
m4trace:configure.ac:93: -1- m4_pattern_allow([^XGETTEXT$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^HEXDUMP$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^READELF$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^CPPFILT$])
m4trace:configure.ac:97: -1- m4_pattern_allow([^OBJCOPY$])
m4trace:configure.ac:98: -1- m4_pattern_allow([^DOXYGEN$])
m4trace:configure.ac:102: -1- AM_CONDITIONAL([HAVE_DOXYGEN], [test -n "$DOXYGEN"])
m4trace:configure.ac:102: -1- m4_pattern_allow([^HAVE_DOXYGEN_TRUE$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^HAVE_DOXYGEN_FALSE$])
m4trace:configure.ac:102: -1- _AM_SUBST_NOTMAKE([HAVE_DOXYGEN_TRUE])
m4trace:configure.ac:102: -1- _AM_SUBST_NOTMAKE([HAVE_DOXYGEN_FALSE])
m4trace:configure.ac:104: -1- m4_pattern_allow([^PYTHONPATH$])
m4trace:configure.ac:204: -1- m4_pattern_allow([^USE_ASM$])
m4trace:configure.ac:230: -1- AM_CONDITIONAL([ENABLE_MAN], [test "$enable_man" != no])
m4trace:configure.ac:230: -1- m4_pattern_allow([^ENABLE_MAN_TRUE$])
m4trace:configure.ac:230: -1- m4_pattern_allow([^ENABLE_MAN_FALSE$])
m4trace:configure.ac:230: -1- _AM_SUBST_NOTMAKE([ENABLE_MAN_TRUE])
m4trace:configure.ac:230: -1- _AM_SUBST_NOTMAKE([ENABLE_MAN_FALSE])
m4trace:configure.ac:260: -1- AX_CHECK_COMPILE_FLAG([-Werror], [CXXFLAG_WERROR="-Werror"], [CXXFLAG_WERROR=""])
m4trace:configure.ac:268: -1- AX_CHECK_COMPILE_FLAG([-Og], [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -Og"]], [AX_CHECK_COMPILE_FLAG([-O0],[[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -O0"]],,[[$CXXFLAG_WERROR]])], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:268: -1- AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -O0"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:275: -1- AX_CHECK_COMPILE_FLAG([-g3], [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -g3"]], [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -g"]],,[[$CXXFLAG_WERROR]])], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:275: -1- AX_CHECK_COMPILE_FLAG([-g], [[DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -g"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:281: -1- AX_CHECK_PREPROC_FLAG([-DDEBUG], [[DEBUG_CPPFLAGS="$DEBUG_CPPFLAGS -DDEBUG"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:281: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:281: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:281: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:282: -1- AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER], [[DEBUG_CPPFLAGS="$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:283: -1- AX_CHECK_COMPILE_FLAG([-ftrapv], [DEBUG_CXXFLAGS="$DEBUG_CXXFLAGS -ftrapv"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:290: -1- AX_CHECK_COMPILE_FLAG([[-fsanitize=$use_sanitizers]], [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]], [AC_MSG_ERROR([compiler did not accept requested flags])])
m4trace:configure.ac:300: -1- AX_CHECK_LINK_FLAG([[-fsanitize=$use_sanitizers]], [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]], [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])], [], [AC_LANG_PROGRAM([[
    #include <cstdint>
    #include <cstddef>
    extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }
    __attribute__((weak)) // allow for libFuzzer linking
    ]],[[]])])
m4trace:configure.ac:318: -1- AX_CHECK_COMPILE_FLAG([-Werror=vla], [ERROR_CXXFLAGS="$ERROR_CXXFLAGS -Werror=vla"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:319: -1- AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis], [ERROR_CXXFLAGS="$ERROR_CXXFLAGS -Werror=thread-safety-analysis"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:323: -1- AX_CHECK_COMPILE_FLAG([-Wall], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wall"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:324: -1- AX_CHECK_COMPILE_FLAG([-Wextra], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wextra"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:325: -1- AX_CHECK_COMPILE_FLAG([-Wformat], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:326: -1- AX_CHECK_COMPILE_FLAG([-Wvla], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wvla"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:327: -1- AX_CHECK_COMPILE_FLAG([-Wformat-security], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat-security"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:328: -1- AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wthread-safety-analysis"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:329: -1- AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wrange-loop-analysis"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:330: -1- AX_CHECK_COMPILE_FLAG([-Wredundant-decls], [WARN_CXXFLAGS="$WARN_CXXFLAGS -Wredundant-decls"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:335: -1- AX_CHECK_COMPILE_FLAG([-Wunused-parameter], [NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-unused-parameter"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:336: -1- AX_CHECK_COMPILE_FLAG([-Wself-assign], [NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-self-assign"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:337: -1- AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef], [NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-unused-local-typedef"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:338: -1- AX_CHECK_COMPILE_FLAG([-Wdeprecated-register], [NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-deprecated-register"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:339: -1- AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough], [NOWARN_CXXFLAGS="$NOWARN_CXXFLAGS -Wno-implicit-fallthrough"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:345: -1- AX_CHECK_COMPILE_FLAG([-msse4.2], [[SSE42_CXXFLAGS="-msse4.2"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:346: -1- AX_CHECK_COMPILE_FLAG([-msse4.1], [[SSE41_CXXFLAGS="-msse4.1"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:347: -1- AX_CHECK_COMPILE_FLAG([-mavx -mavx2], [[AVX2_CXXFLAGS="-mavx -mavx2"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:348: -1- AX_CHECK_COMPILE_FLAG([-msse4 -msha], [[SHANI_CXXFLAGS="-msse4 -msha"]], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:375: -1- m4_pattern_allow([^ENABLE_SSE41$])
m4trace:configure.ac:390: -1- m4_pattern_allow([^ENABLE_AVX2$])
m4trace:configure.ac:405: -1- m4_pattern_allow([^ENABLE_SHANI$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^HAVE_LIBMINGWTHRD$])
m4trace:configure.ac:466: -1- m4_pattern_allow([^HAVE_LIBKERNEL32$])
m4trace:configure.ac:467: -1- m4_pattern_allow([^HAVE_LIBUSER32$])
m4trace:configure.ac:468: -1- m4_pattern_allow([^HAVE_LIBGDI32$])
m4trace:configure.ac:469: -1- m4_pattern_allow([^HAVE_LIBCOMDLG32$])
m4trace:configure.ac:470: -1- m4_pattern_allow([^HAVE_LIBWINSPOOL$])
m4trace:configure.ac:471: -1- m4_pattern_allow([^HAVE_LIBWINMM$])
m4trace:configure.ac:472: -1- m4_pattern_allow([^HAVE_LIBSHELL32$])
m4trace:configure.ac:473: -1- m4_pattern_allow([^HAVE_LIBCOMCTL32$])
m4trace:configure.ac:474: -1- m4_pattern_allow([^HAVE_LIBOLE32$])
m4trace:configure.ac:475: -1- m4_pattern_allow([^HAVE_LIBOLEAUT32$])
m4trace:configure.ac:476: -1- m4_pattern_allow([^HAVE_LIBUUID$])
m4trace:configure.ac:477: -1- m4_pattern_allow([^HAVE_LIBRPCRT4$])
m4trace:configure.ac:478: -1- m4_pattern_allow([^HAVE_LIBADVAPI32$])
m4trace:configure.ac:479: -1- m4_pattern_allow([^HAVE_LIBWS2_32$])
m4trace:configure.ac:480: -1- m4_pattern_allow([^HAVE_LIBMSWSOCK$])
m4trace:configure.ac:481: -1- m4_pattern_allow([^HAVE_LIBSHLWAPI$])
m4trace:configure.ac:482: -1- m4_pattern_allow([^HAVE_LIBIPHLPAPI$])
m4trace:configure.ac:483: -1- m4_pattern_allow([^HAVE_LIBCRYPT32$])
m4trace:configure.ac:487: -1- AX_CHECK_LINK_FLAG([[-static]], [LIBTOOL_APP_LDFLAGS="$LIBTOOL_APP_LDFLAGS -all-static"])
m4trace:configure.ac:489: -1- m4_pattern_allow([^MAKENSIS$])
m4trace:configure.ac:494: -1- m4_pattern_allow([^WINDRES$])
m4trace:configure.ac:509: -1- m4_pattern_allow([^WINDOWS_BITS$])
m4trace:configure.ac:525: -1- m4_pattern_allow([^RSVG_CONVERT$])
m4trace:configure.ac:526: -1- m4_pattern_allow([^BREW$])
m4trace:configure.ac:556: -1- m4_pattern_allow([^INSTALLNAMETOOL$])
m4trace:configure.ac:557: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:558: -1- m4_pattern_allow([^GENISOIMAGE$])
m4trace:configure.ac:559: -1- m4_pattern_allow([^RSVG_CONVERT$])
m4trace:configure.ac:560: -1- m4_pattern_allow([^IMAGEMAGICK_CONVERT$])
m4trace:configure.ac:561: -1- m4_pattern_allow([^TIFFCP$])
m4trace:configure.ac:572: -1- AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS="$LDFLAGS -Wl,-headerpad_max_install_names"])
m4trace:configure.ac:621: -1- m4_pattern_allow([^EXTENDED_FUNCTIONAL_TESTS$])
m4trace:configure.ac:638: -1- AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS="$LDFLAGS --coverage"], [AC_MSG_ERROR("lcov testing requested but --coverage linker flag does not work")])
m4trace:configure.ac:640: -1- AX_CHECK_COMPILE_FLAG([--coverage], [CXXFLAGS="$CXXFLAGS --coverage"], [AC_MSG_ERROR("lcov testing requested but --coverage flag does not work")])
m4trace:configure.ac:642: -1- m4_pattern_allow([^USE_COVERAGE$])
m4trace:configure.ac:647: -1- m4_pattern_allow([^LCOV_OPTS$])
m4trace:configure.ac:651: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:651: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:651: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:651: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:651: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:654: -1- AX_PTHREAD
m4trace:configure.ac:654: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:654: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:654: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:654: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:654: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:654: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:654: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:654: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:654: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^ax_pthread_config$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^PTHREAD_CREATE_JOINABLE$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^HAVE_PTHREAD_PRIO_INHERIT$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^PTHREAD_CFLAGS$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:654: -1- m4_pattern_allow([^HAVE_PTHREAD$])
m4trace:configure.ac:659: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:659: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:661: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:661: -1- m4_pattern_allow([^HAVE_STRERROR_R$])
m4trace:configure.ac:661: -1- m4_pattern_allow([^STRERROR_R_CHAR_P$])
m4trace:configure.ac:675: -1- AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS="$LDFLAGS -Wl,--large-address-aware"])
m4trace:configure.ac:677: -1- AX_GCC_FUNC_ATTRIBUTE([visibility])
m4trace:configure.ac:677: -1- m4_pattern_allow([^HAVE_FUNC_ATTRIBUTE_VISIBILITY$])
m4trace:configure.ac:678: -1- AX_GCC_FUNC_ATTRIBUTE([dllexport])
m4trace:configure.ac:678: -1- m4_pattern_allow([^HAVE_FUNC_ATTRIBUTE_DLLEXPORT$])
m4trace:configure.ac:679: -1- AX_GCC_FUNC_ATTRIBUTE([dllimport])
m4trace:configure.ac:679: -1- m4_pattern_allow([^HAVE_FUNC_ATTRIBUTE_DLLIMPORT$])
m4trace:configure.ac:685: -1- m4_pattern_allow([^HAVE_LIBRT$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^FDELT_TYPE$])
m4trace:configure.ac:700: -1- AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS="$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4"])
m4trace:configure.ac:701: -1- AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS="$COMPAT_LDFLAGS -Wl,--wrap=log2f"])
m4trace:configure.ac:715: -1- AX_CHECK_COMPILE_FLAG([-pg], [GPROF_CXXFLAGS="-pg"], [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:718: -1- AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS="-no-pie"])
m4trace:configure.ac:719: -1- AX_CHECK_LINK_FLAG([[-pg]], [GPROF_LDFLAGS="$GPROF_LDFLAGS -pg"], [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])
m4trace:configure.ac:725: -1- AX_CHECK_COMPILE_FLAG([-fPIC], [PIC_FLAGS="-fPIC"])
m4trace:configure.ac:730: -1- AX_CHECK_COMPILE_FLAG([-Wstack-protector], [HARDENED_CXXFLAGS="$HARDENED_CXXFLAGS -Wstack-protector"])
m4trace:configure.ac:731: -1- AX_CHECK_COMPILE_FLAG([-fstack-protector-all], [HARDENED_CXXFLAGS="$HARDENED_CXXFLAGS -fstack-protector-all"])
m4trace:configure.ac:733: -1- AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2], [
    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[
      HARDENED_CPPFLAGS="$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE"
    ])
    HARDENED_CPPFLAGS="$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2"
  ])
m4trace:configure.ac:733: -1- AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE], [
      HARDENED_CPPFLAGS="$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE"
    ])
m4trace:configure.ac:740: -1- AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--dynamicbase"])
m4trace:configure.ac:741: -1- AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--nxcompat"])
m4trace:configure.ac:742: -1- AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,--high-entropy-va"])
m4trace:configure.ac:743: -1- AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,-z,relro"])
m4trace:configure.ac:744: -1- AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS="$HARDENED_LDFLAGS -Wl,-z,now"])
m4trace:configure.ac:745: -1- AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS="-fPIE"; HARDENED_LDFLAGS="$HARDENED_LDFLAGS -pie"], [], [[$CXXFLAG_WERROR]])
m4trace:configure.ac:749: -1- m4_pattern_allow([^HAVE_LIBSSP$])
m4trace:configure.ac:756: -1- AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS="$LDFLAGS -Wl,-dead_strip"])
m4trace:configure.ac:761: -1- m4_pattern_allow([^HAVE_DECL_GETIFADDRS$])
m4trace:configure.ac:761: -1- m4_pattern_allow([^HAVE_DECL_FREEIFADDRS$])
m4trace:configure.ac:765: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:768: -1- m4_pattern_allow([^HAVE_DECL_DAEMON$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_LE16TOH$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_LE32TOH$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_LE64TOH$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_HTOLE16$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_HTOLE32$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_HTOLE64$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_BE16TOH$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_BE32TOH$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_BE64TOH$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_HTOBE16$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_HTOBE32$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^HAVE_DECL_HTOBE64$])
m4trace:configure.ac:777: -1- m4_pattern_allow([^HAVE_DECL_BSWAP_16$])
m4trace:configure.ac:777: -1- m4_pattern_allow([^HAVE_DECL_BSWAP_32$])
m4trace:configure.ac:777: -1- m4_pattern_allow([^HAVE_DECL_BSWAP_64$])
m4trace:configure.ac:782: -1- m4_pattern_allow([^HAVE_DECL___BUILTIN_CLZ$])
m4trace:configure.ac:782: -1- m4_pattern_allow([^HAVE_DECL___BUILTIN_CLZL$])
m4trace:configure.ac:782: -1- m4_pattern_allow([^HAVE_DECL___BUILTIN_CLZLL$])
m4trace:configure.ac:786: -1- m4_pattern_allow([^HAVE_MALLOC_INFO$])
m4trace:configure.ac:794: -1- m4_pattern_allow([^HAVE_MALLOPT_ARENA_MAX$])
m4trace:configure.ac:801: -1- m4_pattern_allow([^HAVE_VISIBILITY_ATTRIBUTE$])
m4trace:configure.ac:820: -1- m4_pattern_allow([^HAVE_THREAD_LOCAL$])
m4trace:configure.ac:841: -1- m4_pattern_allow([^HAVE_SYS_GETRANDOM$])
m4trace:configure.ac:850: -1- m4_pattern_allow([^HAVE_GETENTROPY$])
m4trace:configure.ac:857: -1- m4_pattern_allow([^HAVE_GETENTROPY_RAND$])
m4trace:configure.ac:865: -1- m4_pattern_allow([^HAVE_SYSCTL_ARND$])
m4trace:configure.ac:874: -1- m4_pattern_allow([^CHAR_EQUALS_INT8$])
m4trace:configure.ac:883: -1- AX_CHECK_COMPILE_FLAG([-fvisibility=hidden], [RE_CXXFLAGS="-fvisibility=hidden"], [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])
m4trace:configure.ac:890: -1- AM_CONDITIONAL([EMBEDDED_LEVELDB], [true])
m4trace:configure.ac:890: -1- m4_pattern_allow([^EMBEDDED_LEVELDB_TRUE$])
m4trace:configure.ac:890: -1- m4_pattern_allow([^EMBEDDED_LEVELDB_FALSE$])
m4trace:configure.ac:890: -1- _AM_SUBST_NOTMAKE([EMBEDDED_LEVELDB_TRUE])
m4trace:configure.ac:890: -1- _AM_SUBST_NOTMAKE([EMBEDDED_LEVELDB_FALSE])
m4trace:configure.ac:891: -1- m4_pattern_allow([^LEVELDB_CPPFLAGS$])
m4trace:configure.ac:892: -1- m4_pattern_allow([^LIBLEVELDB$])
m4trace:configure.ac:893: -1- m4_pattern_allow([^LIBMEMENV$])
m4trace:configure.ac:897: -1- BITCOIN_FIND_BDB48
m4trace:configure.ac:897: -1- m4_pattern_allow([^BDB_CFLAGS$])
m4trace:configure.ac:897: -1- m4_pattern_allow([^BDB_LIBS$])
m4trace:configure.ac:897: -1- BITCOIN_SUBDIR_TO_INCLUDE([BDB_CPPFLAGS], [${bdbpath}], [db_cxx])
m4trace:configure.ac:897: -1- BITCOIN_SUBDIR_TO_INCLUDE([BDB_CPPFLAGS], [${bdb48path}], [db_cxx])
m4trace:configure.ac:897: -1- m4_pattern_allow([^BDB_CPPFLAGS$])
m4trace:configure.ac:897: -1- m4_pattern_allow([^BDB_LIBS$])
m4trace:configure.ac:909: -1- BITCOIN_QT_INIT
m4trace:configure.ac:909: -1- m4_pattern_allow([^QT_TRANSLATION_DIR$])
m4trace:configure.ac:912: -1- BITCOIN_QT_CONFIGURE([$use_pkgconfig])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG])
m4trace:configure.ac:912: -1- _BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])
m4trace:configure.ac:912: -1- _BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    if test "x$qt_include_path" != x; then
      QT_INCLUDES="-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus"
      CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
    fi
  ])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])
m4trace:configure.ac:912: -2- BITCOIN_QT_FAIL([QtCore headers missing])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])
m4trace:configure.ac:912: -2- BITCOIN_QT_FAIL([QtGui headers missing])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])
m4trace:configure.ac:912: -2- BITCOIN_QT_FAIL([QtNetwork headers missing])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    if test "x$bitcoin_qt_want_version" = xauto; then
      _BITCOIN_QT_CHECK_QT5
      _BITCOIN_QT_CHECK_QT58
    fi
    QT_LIB_PREFIX=Qt5
  ])
m4trace:configure.ac:912: -1- _BITCOIN_QT_CHECK_QT5
m4trace:configure.ac:912: -1- _BITCOIN_QT_CHECK_QT58
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    LIBS=
    if test "x$qt_lib_path" != x; then
      LIBS="$LIBS -L$qt_lib_path"
    fi

    if test "x$TARGET_OS" = xwindows; then
      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))
    fi
  ])
m4trace:configure.ac:912: -2- BITCOIN_QT_FAIL([libimm32 not found])
m4trace:configure.ac:912: -1- m4_pattern_allow([^HAVE_LIBIMM32$])
m4trace:configure.ac:912: -2- m4_pattern_allow([^HAVE_LIBZ_$])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_z ''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lz " >&5
$as_echo_n "checking for main in -lz ... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lz   $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define HAVE_LIBZ_ 1
_ACEOF

  LIBS="-lz  $LIBS"

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: zlib not found. Assuming qt has it built-in" >&5
$as_echo "$as_me: WARNING: zlib not found. Assuming qt has it built-in" >&2;}
fi
])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing jpeg_create_decompress " >&5
$as_echo_n "checking for library containing jpeg_create_decompress ... " >&6; }
if ${ac_cv_search_jpeg_create_decompress_+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char jpeg_create_decompress  ();
int
main ()
{
return jpeg_create_decompress  ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' qtjpeg jpeg; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_cxx_try_link "$LINENO"; then :
  ac_cv_search_jpeg_create_decompress_=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if ${ac_cv_search_jpeg_create_decompress_+:} false; then :
  break
fi
done
if ${ac_cv_search_jpeg_create_decompress_+:} false; then :
  
else
  ac_cv_search_jpeg_create_decompress_=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_jpeg_create_decompress_" >&5
$as_echo "$ac_cv_search_jpeg_create_decompress_" >&6; }
ac_res=$ac_cv_search_jpeg_create_decompress_
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: libjpeg not found. Assuming qt has it built-in" >&5
$as_echo "$as_me: WARNING: libjpeg not found. Assuming qt has it built-in" >&2;}
fi
])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing png_error " >&5
$as_echo_n "checking for library containing png_error ... " >&6; }
if ${ac_cv_search_png_error_+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char png_error  ();
int
main ()
{
return png_error  ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' qtpng png; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_cxx_try_link "$LINENO"; then :
  ac_cv_search_png_error_=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if ${ac_cv_search_png_error_+:} false; then :
  break
fi
done
if ${ac_cv_search_png_error_+:} false; then :
  
else
  ac_cv_search_png_error_=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_png_error_" >&5
$as_echo "$ac_cv_search_png_error_" >&6; }
ac_res=$ac_cv_search_png_error_
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: libpng not found. Assuming qt has it built-in" >&5
$as_echo "$as_me: WARNING: libpng not found. Assuming qt has it built-in" >&2;}
fi
])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing pcre16_exec" >&5
$as_echo_n "checking for library containing pcre16_exec... " >&6; }
if ${ac_cv_search_pcre16_exec+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char pcre16_exec ();
int
main ()
{
return pcre16_exec ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' qtpcre pcre16; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_cxx_try_link "$LINENO"; then :
  ac_cv_search_pcre16_exec=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if ${ac_cv_search_pcre16_exec+:} false; then :
  break
fi
done
if ${ac_cv_search_pcre16_exec+:} false; then :
  
else
  ac_cv_search_pcre16_exec=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_pcre16_exec" >&5
$as_echo "$ac_cv_search_pcre16_exec" >&6; }
ac_res=$ac_cv_search_pcre16_exec
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: libpcre16 not found. Assuming qt has it built-in" >&5
$as_echo "$as_me: WARNING: libpcre16 not found. Assuming qt has it built-in" >&2;}
fi
])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing png_error " >&5
$as_echo_n "checking for library containing png_error ... " >&6; }
if ${ac_cv_search_png_error_+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char png_error  ();
int
main ()
{
return png_error  ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' qtlibpng png; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_cxx_try_link "$LINENO"; then :
  ac_cv_search_png_error_=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if ${ac_cv_search_png_error_+:} false; then :
  break
fi
done
if ${ac_cv_search_png_error_+:} false; then :
  
else
  ac_cv_search_png_error_=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_png_error_" >&5
$as_echo "$ac_cv_search_png_error_" >&6; }
ac_res=$ac_cv_search_png_error_
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: libpng not found. Assuming qt has it built-in" >&5
$as_echo "$as_me: WARNING: libpng not found. Assuming qt has it built-in" >&2;}
fi
])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing pcre2_match_16" >&5
$as_echo_n "checking for library containing pcre2_match_16... " >&6; }
if ${ac_cv_search_pcre2_match_16+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char pcre2_match_16 ();
int
main ()
{
return pcre2_match_16 ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' qtpcre2 libqtpcre2; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_cxx_try_link "$LINENO"; then :
  ac_cv_search_pcre2_match_16=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if ${ac_cv_search_pcre2_match_16+:} false; then :
  break
fi
done
if ${ac_cv_search_pcre2_match_16+:} false; then :
  
else
  ac_cv_search_pcre2_match_16=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_pcre2_match_16" >&5
$as_echo "$ac_cv_search_pcre2_match_16" >&6; }
ac_res=$ac_cv_search_pcre2_match_16
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: libqtpcre2 not found. Assuming qt has it built-in" >&5
$as_echo "$as_me: WARNING: libqtpcre2 not found. Assuming qt has it built-in" >&2;}
fi
])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing hb_ot_tags_from_script " >&5
$as_echo_n "checking for library containing hb_ot_tags_from_script ... " >&6; }
if ${ac_cv_search_hb_ot_tags_from_script_+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char hb_ot_tags_from_script  ();
int
main ()
{
return hb_ot_tags_from_script  ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' qtharfbuzzng qtharfbuzz harfbuzz; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_cxx_try_link "$LINENO"; then :
  ac_cv_search_hb_ot_tags_from_script_=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if ${ac_cv_search_hb_ot_tags_from_script_+:} false; then :
  break
fi
done
if ${ac_cv_search_hb_ot_tags_from_script_+:} false; then :
  
else
  ac_cv_search_hb_ot_tags_from_script_=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_hb_ot_tags_from_script_" >&5
$as_echo "$ac_cv_search_hb_ot_tags_from_script_" >&6; }
ac_res=$ac_cv_search_hb_ot_tags_from_script_
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: libharfbuzz not found. Assuming qt has it built-in or support is disabled" >&5
$as_echo "$as_me: WARNING: libharfbuzz not found. Assuming qt has it built-in or support is disabled" >&2;}
fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib${QT_LIB_PREFIX}Core not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}Core   ''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}Core   " >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}Core   ... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}Core     $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}Core   " | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}Core    $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib${QT_LIB_PREFIX}Core not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib${QT_LIB_PREFIX}Core not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib${QT_LIB_PREFIX}Core not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib${QT_LIB_PREFIX}Gui not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}Gui    ''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}Gui    " >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}Gui    ... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}Gui      $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}Gui    " | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}Gui     $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib${QT_LIB_PREFIX}Gui not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib${QT_LIB_PREFIX}Gui not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib${QT_LIB_PREFIX}Gui not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib${QT_LIB_PREFIX}Network not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}Network''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}Network" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}Network... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}Network  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}Network" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}Network $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib${QT_LIB_PREFIX}Network not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib${QT_LIB_PREFIX}Network not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib${QT_LIB_PREFIX}Network not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib${QT_LIB_PREFIX}Widgets not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}Widgets''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}Widgets" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}Widgets... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}Widgets  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}Widgets" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}Widgets $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib${QT_LIB_PREFIX}Widgets not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib${QT_LIB_PREFIX}Widgets not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib${QT_LIB_PREFIX}Widgets not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    LIBS=
    if test "x$qt_lib_path" != x; then
      LIBS="-L$qt_lib_path"
    fi
    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)
    AC_CHECK_HEADER([QTest],, have_qt_test=no)
    QT_TEST_LIBS="$LIBS"
    if test "x$use_dbus" != xno; then
      LIBS=
      if test "x$qt_lib_path" != x; then
        LIBS="-L$qt_lib_path"
      fi
      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)
      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)
      QT_DBUS_LIBS="$LIBS"
    fi
  ])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
  TEMP_CPPFLAGS=$CPPFLAGS
  TEMP_CXXFLAGS=$CXXFLAGS
  CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
  CXXFLAGS="$PIC_FLAGS $CXXFLAGS"
  _BITCOIN_QT_IS_STATIC
  if test "x$bitcoin_cv_static_qt" = xyes; then
    _BITCOIN_QT_FIND_STATIC_PLUGINS
    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])
    AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
          #include <QtCore/qconfig.h>
          #ifndef QT_VERSION
          #  include <QtCore/qglobal.h>
          #endif
        ]],
        [[
          #if QT_VERSION >= 0x050400
          choke
          #endif
        ]])],
      [bitcoin_cv_need_acc_widget=yes],
      [bitcoin_cv_need_acc_widget=no])
    ])
    if test "x$bitcoin_cv_need_acc_widget" = xyes; then
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])
    fi
    _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])
    AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])
    if test "x$TARGET_OS" = xwindows; then
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])
      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])
    elif test "x$TARGET_OS" = xlinux; then
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])
      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])
    elif test "x$TARGET_OS" = xdarwin; then
      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS="$QT_LIBS -framework IOKit"],[AC_MSG_ERROR(could not iokit framework)])
      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])
      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])
    fi
  fi
  CPPFLAGS=$TEMP_CPPFLAGS
  CXXFLAGS=$TEMP_CXXFLAGS
  ])
m4trace:configure.ac:912: -1- _BITCOIN_QT_IS_STATIC
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_STATICPLUGIN$])
m4trace:configure.ac:912: -1- _BITCOIN_QT_FIND_STATIC_PLUGINS
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib$QT_LIB_PREFIXPlatformSupport not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}PlatformSupport''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}PlatformSupport" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}PlatformSupport... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}PlatformSupport  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}PlatformSupport" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}PlatformSupport $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib$QT_LIB_PREFIXPlatformSupport not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib$QT_LIB_PREFIXPlatformSupport not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib$QT_LIB_PREFIXPlatformSupport not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib$QT_LIB_PREFIXFontDatabaseSupport not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}FontDatabaseSupport''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}FontDatabaseSupport" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}FontDatabaseSupport... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}FontDatabaseSupport  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}FontDatabaseSupport" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}FontDatabaseSupport $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib$QT_LIB_PREFIXFontDatabaseSupport not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib$QT_LIB_PREFIXFontDatabaseSupport not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib$QT_LIB_PREFIXFontDatabaseSupport not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib$QT_LIB_PREFIXEventDispatcherSupport not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}EventDispatcherSupport''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}EventDispatcherSupport" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}EventDispatcherSupport... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}EventDispatcherSupport  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}EventDispatcherSupport" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}EventDispatcherSupport $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib$QT_LIB_PREFIXEventDispatcherSupport not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib$QT_LIB_PREFIXEventDispatcherSupport not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib$QT_LIB_PREFIXEventDispatcherSupport not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib$QT_LIB_PREFIXThemeSupport not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}ThemeSupport''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}ThemeSupport" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}ThemeSupport... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}ThemeSupport  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}ThemeSupport" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}ThemeSupport $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib$QT_LIB_PREFIXThemeSupport not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib$QT_LIB_PREFIXThemeSupport not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib$QT_LIB_PREFIXThemeSupport not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib$QT_LIB_PREFIXFbSupport not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}FbSupport''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}FbSupport" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}FbSupport... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}FbSupport  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}FbSupport" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}FbSupport $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib$QT_LIB_PREFIXFbSupport not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib$QT_LIB_PREFIXFbSupport not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib$QT_LIB_PREFIXFbSupport not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib$QT_LIB_PREFIXDeviceDiscoverySupport not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}DeviceDiscoverySupport''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}DeviceDiscoverySupport" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}DeviceDiscoverySupport... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}DeviceDiscoverySupport  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}DeviceDiscoverySupport" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}DeviceDiscoverySupport $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib$QT_LIB_PREFIXDeviceDiscoverySupport not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib$QT_LIB_PREFIXDeviceDiscoverySupport not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib$QT_LIB_PREFIXDeviceDiscoverySupport not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -3- BITCOIN_QT_FAIL([lib$QT_LIB_PREFIXAccessibilitySupport not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_${QT_LIB_PREFIX}AccessibilitySupport''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -l${QT_LIB_PREFIX}AccessibilitySupport" >&5
$as_echo_n "checking for main in -l${QT_LIB_PREFIX}AccessibilitySupport... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l${QT_LIB_PREFIX}AccessibilitySupport  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
@%:@define `$as_echo "HAVE_LIB${QT_LIB_PREFIX}AccessibilitySupport" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l${QT_LIB_PREFIX}AccessibilitySupport $LIBS"

else
  
  if test "x$bitcoin_qt_want_version" = xauto && test "x$bitcoin_qt_force" != xyes; then
    if test "x$bitcoin_enable_qt" != xno; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: lib$QT_LIB_PREFIXAccessibilitySupport not found; bitcoin-qt frontend will not be built" >&5
$as_echo "$as_me: WARNING: lib$QT_LIB_PREFIXAccessibilitySupport not found; bitcoin-qt frontend will not be built" >&2;}
    fi
    bitcoin_enable_qt=no
    bitcoin_enable_qt_test=no
  else
    as_fn_error $? "lib$QT_LIB_PREFIXAccessibilitySupport not found" "$LINENO" 5
  fi

fi
])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_STATICPLUGIN$])
m4trace:configure.ac:912: -1- _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([Could not resolve: -lqtaccessiblewidgets])
m4trace:configure.ac:912: -1- _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)], [-lqminimal])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([Could not resolve: -lqminimal])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_QPA_PLATFORM_MINIMAL$])
m4trace:configure.ac:912: -1- _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)], [-lqwindows])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([Could not resolve: -lqwindows])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_QPA_PLATFORM_WINDOWS$])
m4trace:configure.ac:912: -1- _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)], [-lqxcb -lxcb-static])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([Could not resolve: -lqxcb -lxcb-static])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_QPA_PLATFORM_XCB$])
m4trace:configure.ac:912: -1- AX_CHECK_LINK_FLAG([[-framework IOKit]], [QT_LIBS="$QT_LIBS -framework IOKit"], [AC_MSG_ERROR(could not iokit framework)])
m4trace:configure.ac:912: -1- _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)], [-lqcocoa])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([Could not resolve: -lqcocoa])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_QPA_PLATFORM_COCOA$])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)
    TEMP_CPPFLAGS=$CPPFLAGS
    TEMP_CXXFLAGS=$CXXFLAGS
    CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
    CXXFLAGS="$PIE_FLAGS $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QtCore/qconfig.h>
        #ifndef QT_VERSION
        #  include <QtCore/qglobal.h>
        #endif
      ]],
      [[
        #if defined(QT_REDUCE_RELOCATIONS)
        choke
        #endif
      ]])],
      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],
      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]
    )
    CPPFLAGS=$TEMP_CPPFLAGS
    CXXFLAGS=$TEMP_CXXFLAGS
    ])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)
    TEMP_CPPFLAGS=$CPPFLAGS
    CPPFLAGS="$QT_INCLUDES $CPPFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QtCore/qconfig.h>
        #ifndef QT_VERSION
        #  include <QtCore/qglobal.h>
        #endif
      ]],
      [[
        #if defined(QT_REDUCE_RELOCATIONS)
        choke
        #endif
      ]])],
      [ AC_MSG_RESULT(no)],
      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]
    )
    CPPFLAGS=$TEMP_CPPFLAGS
    ])
m4trace:configure.ac:912: -1- BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], [$qt_bin_path])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    if test "x$qt_bin_path" != x; then
      AC_PATH_PROGS(MOC,moc-qt5 moc5 moc,,$qt_bin_path)
    else
      AC_PATH_PROGS(MOC,moc-qt5 moc5 moc)
    fi
    if test "x$MOC" = x && test "x" != xyes; then
      BITCOIN_QT_FAIL([MOC not found])
    fi
  ])
m4trace:configure.ac:912: -1- m4_pattern_allow([^MOC$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^MOC$])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([MOC not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], [$qt_bin_path])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    if test "x$qt_bin_path" != x; then
      AC_PATH_PROGS(UIC,uic-qt5 uic5 uic,,$qt_bin_path)
    else
      AC_PATH_PROGS(UIC,uic-qt5 uic5 uic)
    fi
    if test "x$UIC" = x && test "x" != xyes; then
      BITCOIN_QT_FAIL([UIC not found])
    fi
  ])
m4trace:configure.ac:912: -1- m4_pattern_allow([^UIC$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^UIC$])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([UIC not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], [$qt_bin_path])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    if test "x$qt_bin_path" != x; then
      AC_PATH_PROGS(RCC,rcc-qt5 rcc5 rcc,,$qt_bin_path)
    else
      AC_PATH_PROGS(RCC,rcc-qt5 rcc5 rcc)
    fi
    if test "x$RCC" = x && test "x" != xyes; then
      BITCOIN_QT_FAIL([RCC not found])
    fi
  ])
m4trace:configure.ac:912: -1- m4_pattern_allow([^RCC$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^RCC$])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([RCC not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], [$qt_bin_path])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    if test "x$qt_bin_path" != x; then
      AC_PATH_PROGS(LRELEASE,lrelease-qt5 lrelease5 lrelease,,$qt_bin_path)
    else
      AC_PATH_PROGS(LRELEASE,lrelease-qt5 lrelease5 lrelease)
    fi
    if test "x$LRELEASE" = x && test "x" != xyes; then
      BITCOIN_QT_FAIL([LRELEASE not found])
    fi
  ])
m4trace:configure.ac:912: -1- m4_pattern_allow([^LRELEASE$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^LRELEASE$])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([LRELEASE not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate], [$qt_bin_path], [yes])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    if test "x$qt_bin_path" != x; then
      AC_PATH_PROGS(LUPDATE,lupdate-qt5 lupdate5 lupdate,,$qt_bin_path)
    else
      AC_PATH_PROGS(LUPDATE,lupdate-qt5 lupdate5 lupdate)
    fi
    if test "x$LUPDATE" = x && test "xyes" != xyes; then
      BITCOIN_QT_FAIL([LUPDATE not found])
    fi
  ])
m4trace:configure.ac:912: -1- m4_pattern_allow([^LUPDATE$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^LUPDATE$])
m4trace:configure.ac:912: -1- BITCOIN_QT_FAIL([LUPDATE not found])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
       MOC_DEFS="${MOC_DEFS} -DQ_OS_MAC"
       base_frameworks="-framework Foundation -framework ApplicationServices -framework AppKit"
       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS="$QT_LIBS $base_frameworks"],[AC_MSG_ERROR(could not find base frameworks)])
     ])
m4trace:configure.ac:912: -1- AX_CHECK_LINK_FLAG([[$base_frameworks]], [QT_LIBS="$QT_LIBS $base_frameworks"], [AC_MSG_ERROR(could not find base frameworks)])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS="$QT_LDFLAGS -mwindows"],[AC_MSG_WARN(-mwindows linker support not detected)])
       ])
m4trace:configure.ac:912: -1- AX_CHECK_LINK_FLAG([[-mwindows]], [QT_LDFLAGS="$QT_LDFLAGS -mwindows"], [AC_MSG_WARN(-mwindows linker support not detected)])
m4trace:configure.ac:912: -1- BITCOIN_QT_CHECK([
    bitcoin_enable_qt=yes
    bitcoin_enable_qt_test=yes
    if test "x$have_qt_test" = xno; then
      bitcoin_enable_qt_test=no
    fi
    bitcoin_enable_qt_dbus=no
    if test "x$use_dbus" != xno && test "x$have_qt_dbus" = xyes; then
      bitcoin_enable_qt_dbus=yes
    fi
    if test "x$use_dbus" = xyes && test "x$have_qt_dbus" = xno; then
      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])
    fi
    if test "x$LUPDATE" = x; then
      AC_MSG_WARN([lupdate is required to update qt translations])
    fi
  ], [
    bitcoin_enable_qt=no
  ])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_PIE_FLAGS$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_INCLUDES$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_LIBS$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_LDFLAGS$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_DBUS_INCLUDES$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_DBUS_LIBS$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_TEST_INCLUDES$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_TEST_LIBS$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^QT_SELECT$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^MOC_DEFS$])
m4trace:configure.ac:926: -1- AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])
m4trace:configure.ac:926: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:926: -1- m4_pattern_allow([^BOOST_LDFLAGS$])
m4trace:configure.ac:926: -1- m4_pattern_allow([^HAVE_BOOST$])
m4trace:configure.ac:930: -1- AX_BOOST_SYSTEM
m4trace:configure.ac:930: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:930: -1- m4_pattern_allow([^HAVE_BOOST_SYSTEM$])
m4trace:configure.ac:930: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:930: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:930: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:931: -1- AX_BOOST_FILESYSTEM
m4trace:configure.ac:931: -1- m4_pattern_allow([^HAVE_BOOST_FILESYSTEM$])
m4trace:configure.ac:931: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:931: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:931: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:932: -1- AX_BOOST_THREAD
m4trace:configure.ac:932: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:932: -1- m4_pattern_allow([^HAVE_BOOST_THREAD$])
m4trace:configure.ac:932: -1- m4_pattern_allow([^BOOST_THREAD_LIB$])
m4trace:configure.ac:932: -1- m4_pattern_allow([^BOOST_THREAD_LIB$])
m4trace:configure.ac:932: -1- m4_pattern_allow([^BOOST_THREAD_LIB$])
m4trace:configure.ac:933: -1- AX_BOOST_CHRONO
m4trace:configure.ac:933: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:933: -1- m4_pattern_allow([^HAVE_BOOST_CHRONO$])
m4trace:configure.ac:933: -1- m4_pattern_allow([^BOOST_CHRONO_LIB$])
m4trace:configure.ac:933: -1- m4_pattern_allow([^BOOST_CHRONO_LIB$])
m4trace:configure.ac:933: -1- m4_pattern_allow([^BOOST_CHRONO_LIB$])
m4trace:configure.ac:937: -1- m4_pattern_allow([DBOOST_AC_USE_STD_ATOMIC])
m4trace:configure.ac:963: -1- AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS="-Wl,--exclude-libs,ALL"])
m4trace:configure.ac:975: -1- AX_BOOST_UNIT_TEST_FRAMEWORK
m4trace:configure.ac:975: -1- m4_pattern_allow([^HAVE_BOOST_UNIT_TEST_FRAMEWORK$])
m4trace:configure.ac:975: -1- m4_pattern_allow([^BOOST_UNIT_TEST_FRAMEWORK_LIB$])
m4trace:configure.ac:975: -1- m4_pattern_allow([^BOOST_UNIT_TEST_FRAMEWORK_LIB$])
m4trace:configure.ac:975: -1- m4_pattern_allow([^BOOST_UNIT_TEST_FRAMEWORK_LIB$])
m4trace:configure.ac:1047: -1- m4_pattern_allow([^HAVE_WORKING_BOOST_SLEEP_FOR$])
m4trace:configure.ac:1068: -1- m4_pattern_allow([^HAVE_WORKING_BOOST_SLEEP$])
m4trace:configure.ac:1138: -1- m4_pattern_allow([^ENABLE_ZMQ$])
m4trace:configure.ac:1138: -1- m4_pattern_allow([^ENABLE_ZMQ$])
m4trace:configure.ac:1143: -1- m4_pattern_allow([^ENABLE_ZMQ$])
m4trace:configure.ac:1148: -1- m4_pattern_allow([^ENABLE_ZMQ$])
m4trace:configure.ac:1161: -1- BITCOIN_QT_CHECK([as_ac_Lib=`$as_echo "ac_cv_lib_protobuf ''_main" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lprotobuf " >&5
$as_echo_n "checking for main in -lprotobuf ... " >&6; }
if eval \${$as_ac_Lib+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lprotobuf   $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main ()
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
if eval test \"x\$"$as_ac_Lib"\" = x"yes"; then :
  PROTOBUF_LIBS=-lprotobuf
else
  have_protobuf=no
fi
])
m4trace:configure.ac:1164: -1- BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])
m4trace:configure.ac:1165: -1- BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])
m4trace:configure.ac:1171: -1- m4_pattern_allow([^HAVE_DECL_EVP_MD_CTX_NEW$])
m4trace:configure.ac:1180: -1- m4_pattern_allow([^HAVE_RAPIDCHECK_H$])
m4trace:configure.ac:1189: -1- m4_pattern_allow([^RAPIDCHECK_LIBS$])
m4trace:configure.ac:1190: -1- AM_CONDITIONAL([ENABLE_PROPERTY_TESTS], [test x$enable_property_tests = xyes])
m4trace:configure.ac:1190: -1- m4_pattern_allow([^ENABLE_PROPERTY_TESTS_TRUE$])
m4trace:configure.ac:1190: -1- m4_pattern_allow([^ENABLE_PROPERTY_TESTS_FALSE$])
m4trace:configure.ac:1190: -1- _AM_SUBST_NOTMAKE([ENABLE_PROPERTY_TESTS_TRUE])
m4trace:configure.ac:1190: -1- _AM_SUBST_NOTMAKE([ENABLE_PROPERTY_TESTS_FALSE])
m4trace:configure.ac:1236: -1- AM_CONDITIONAL([EMBEDDED_UNIVALUE], [test x$need_bundled_univalue = xyes])
m4trace:configure.ac:1236: -1- m4_pattern_allow([^EMBEDDED_UNIVALUE_TRUE$])
m4trace:configure.ac:1236: -1- m4_pattern_allow([^EMBEDDED_UNIVALUE_FALSE$])
m4trace:configure.ac:1236: -1- _AM_SUBST_NOTMAKE([EMBEDDED_UNIVALUE_TRUE])
m4trace:configure.ac:1236: -1- _AM_SUBST_NOTMAKE([EMBEDDED_UNIVALUE_FALSE])
m4trace:configure.ac:1237: -1- m4_pattern_allow([^UNIVALUE_CFLAGS$])
m4trace:configure.ac:1238: -1- m4_pattern_allow([^UNIVALUE_LIBS$])
m4trace:configure.ac:1243: -1- BITCOIN_QT_PATH_PROGS([PROTOC], [protoc], [$protoc_bin_path])
m4trace:configure.ac:1243: -1- BITCOIN_QT_CHECK([
    if test "x$protoc_bin_path" != x; then
      AC_PATH_PROGS(PROTOC,protoc,,$protoc_bin_path)
    else
      AC_PATH_PROGS(PROTOC,protoc)
    fi
    if test "x$PROTOC" = x && test "x" != xyes; then
      BITCOIN_QT_FAIL([PROTOC not found])
    fi
  ])
m4trace:configure.ac:1243: -1- m4_pattern_allow([^PROTOC$])
m4trace:configure.ac:1243: -1- m4_pattern_allow([^PROTOC$])
m4trace:configure.ac:1243: -1- BITCOIN_QT_FAIL([PROTOC not found])
m4trace:configure.ac:1247: -1- AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])
m4trace:configure.ac:1247: -1- m4_pattern_allow([^BUILD_BITCOIND_TRUE$])
m4trace:configure.ac:1247: -1- m4_pattern_allow([^BUILD_BITCOIND_FALSE$])
m4trace:configure.ac:1247: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIND_TRUE])
m4trace:configure.ac:1247: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIND_FALSE])
m4trace:configure.ac:1251: -1- AM_CONDITIONAL([BUILD_BITCOIN_CLI], [test x$build_bitcoin_cli = xyes])
m4trace:configure.ac:1251: -1- m4_pattern_allow([^BUILD_BITCOIN_CLI_TRUE$])
m4trace:configure.ac:1251: -1- m4_pattern_allow([^BUILD_BITCOIN_CLI_FALSE$])
m4trace:configure.ac:1251: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_CLI_TRUE])
m4trace:configure.ac:1251: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_CLI_FALSE])
m4trace:configure.ac:1255: -1- AM_CONDITIONAL([BUILD_BITCOIN_TX], [test x$build_bitcoin_tx = xyes])
m4trace:configure.ac:1255: -1- m4_pattern_allow([^BUILD_BITCOIN_TX_TRUE$])
m4trace:configure.ac:1255: -1- m4_pattern_allow([^BUILD_BITCOIN_TX_FALSE$])
m4trace:configure.ac:1255: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_TX_TRUE])
m4trace:configure.ac:1255: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_TX_FALSE])
m4trace:configure.ac:1259: -1- AM_CONDITIONAL([BUILD_BITCOIN_WALLET], [test x$build_bitcoin_wallet = xyes])
m4trace:configure.ac:1259: -1- m4_pattern_allow([^BUILD_BITCOIN_WALLET_TRUE$])
m4trace:configure.ac:1259: -1- m4_pattern_allow([^BUILD_BITCOIN_WALLET_FALSE$])
m4trace:configure.ac:1259: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_WALLET_TRUE])
m4trace:configure.ac:1259: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_WALLET_FALSE])
m4trace:configure.ac:1263: -1- AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])
m4trace:configure.ac:1263: -1- m4_pattern_allow([^BUILD_BITCOIN_LIBS_TRUE$])
m4trace:configure.ac:1263: -1- m4_pattern_allow([^BUILD_BITCOIN_LIBS_FALSE$])
m4trace:configure.ac:1263: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_LIBS_TRUE])
m4trace:configure.ac:1263: -1- _AM_SUBST_NOTMAKE([BUILD_BITCOIN_LIBS_FALSE])
m4trace:configure.ac:1265: -1- m4_pattern_allow([^HAVE_CONSENSUS_LIB$])
m4trace:configure.ac:1288: -1- AX_CHECK_PREPROC_FLAG([-Qunused-arguments], [CPPFLAGS="-Qunused-arguments $CPPFLAGS"])
m4trace:configure.ac:1295: -1- m4_pattern_allow([^ENABLE_WALLET$])
m4trace:configure.ac:1319: -1- m4_pattern_allow([^USE_UPNP$])
m4trace:configure.ac:1334: -1- m4_pattern_allow([^USE_DBUS$])
m4trace:configure.ac:1348: -1- m4_pattern_allow([^USE_QRCODE$])
m4trace:configure.ac:1376: -1- m4_pattern_allow([^ENABLE_BIP70$])
m4trace:configure.ac:1385: -1- AM_CONDITIONAL([ENABLE_ZMQ], [test "x$use_zmq" = "xyes"])
m4trace:configure.ac:1385: -1- m4_pattern_allow([^ENABLE_ZMQ_TRUE$])
m4trace:configure.ac:1385: -1- m4_pattern_allow([^ENABLE_ZMQ_FALSE$])
m4trace:configure.ac:1385: -1- _AM_SUBST_NOTMAKE([ENABLE_ZMQ_TRUE])
m4trace:configure.ac:1385: -1- _AM_SUBST_NOTMAKE([ENABLE_ZMQ_FALSE])
m4trace:configure.ac:1407: -1- AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])
m4trace:configure.ac:1407: -1- m4_pattern_allow([^TARGET_DARWIN_TRUE$])
m4trace:configure.ac:1407: -1- m4_pattern_allow([^TARGET_DARWIN_FALSE$])
m4trace:configure.ac:1407: -1- _AM_SUBST_NOTMAKE([TARGET_DARWIN_TRUE])
m4trace:configure.ac:1407: -1- _AM_SUBST_NOTMAKE([TARGET_DARWIN_FALSE])
m4trace:configure.ac:1408: -1- AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])
m4trace:configure.ac:1408: -1- m4_pattern_allow([^BUILD_DARWIN_TRUE$])
m4trace:configure.ac:1408: -1- m4_pattern_allow([^BUILD_DARWIN_FALSE$])
m4trace:configure.ac:1408: -1- _AM_SUBST_NOTMAKE([BUILD_DARWIN_TRUE])
m4trace:configure.ac:1408: -1- _AM_SUBST_NOTMAKE([BUILD_DARWIN_FALSE])
m4trace:configure.ac:1409: -1- AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])
m4trace:configure.ac:1409: -1- m4_pattern_allow([^TARGET_WINDOWS_TRUE$])
m4trace:configure.ac:1409: -1- m4_pattern_allow([^TARGET_WINDOWS_FALSE$])
m4trace:configure.ac:1409: -1- _AM_SUBST_NOTMAKE([TARGET_WINDOWS_TRUE])
m4trace:configure.ac:1409: -1- _AM_SUBST_NOTMAKE([TARGET_WINDOWS_FALSE])
m4trace:configure.ac:1410: -1- AM_CONDITIONAL([ENABLE_WALLET], [test x$enable_wallet = xyes])
m4trace:configure.ac:1410: -1- m4_pattern_allow([^ENABLE_WALLET_TRUE$])
m4trace:configure.ac:1410: -1- m4_pattern_allow([^ENABLE_WALLET_FALSE$])
m4trace:configure.ac:1410: -1- _AM_SUBST_NOTMAKE([ENABLE_WALLET_TRUE])
m4trace:configure.ac:1410: -1- _AM_SUBST_NOTMAKE([ENABLE_WALLET_FALSE])
m4trace:configure.ac:1411: -1- AM_CONDITIONAL([ENABLE_TESTS], [test x$BUILD_TEST = xyes])
m4trace:configure.ac:1411: -1- m4_pattern_allow([^ENABLE_TESTS_TRUE$])
m4trace:configure.ac:1411: -1- m4_pattern_allow([^ENABLE_TESTS_FALSE$])
m4trace:configure.ac:1411: -1- _AM_SUBST_NOTMAKE([ENABLE_TESTS_TRUE])
m4trace:configure.ac:1411: -1- _AM_SUBST_NOTMAKE([ENABLE_TESTS_FALSE])
m4trace:configure.ac:1412: -1- AM_CONDITIONAL([ENABLE_FUZZ], [test x$enable_fuzz = xyes])
m4trace:configure.ac:1412: -1- m4_pattern_allow([^ENABLE_FUZZ_TRUE$])
m4trace:configure.ac:1412: -1- m4_pattern_allow([^ENABLE_FUZZ_FALSE$])
m4trace:configure.ac:1412: -1- _AM_SUBST_NOTMAKE([ENABLE_FUZZ_TRUE])
m4trace:configure.ac:1412: -1- _AM_SUBST_NOTMAKE([ENABLE_FUZZ_FALSE])
m4trace:configure.ac:1413: -1- AM_CONDITIONAL([ENABLE_QT], [test x$bitcoin_enable_qt = xyes])
m4trace:configure.ac:1413: -1- m4_pattern_allow([^ENABLE_QT_TRUE$])
m4trace:configure.ac:1413: -1- m4_pattern_allow([^ENABLE_QT_FALSE$])
m4trace:configure.ac:1413: -1- _AM_SUBST_NOTMAKE([ENABLE_QT_TRUE])
m4trace:configure.ac:1413: -1- _AM_SUBST_NOTMAKE([ENABLE_QT_FALSE])
m4trace:configure.ac:1414: -1- AM_CONDITIONAL([ENABLE_QT_TESTS], [test x$BUILD_TEST_QT = xyes])
m4trace:configure.ac:1414: -1- m4_pattern_allow([^ENABLE_QT_TESTS_TRUE$])
m4trace:configure.ac:1414: -1- m4_pattern_allow([^ENABLE_QT_TESTS_FALSE$])
m4trace:configure.ac:1414: -1- _AM_SUBST_NOTMAKE([ENABLE_QT_TESTS_TRUE])
m4trace:configure.ac:1414: -1- _AM_SUBST_NOTMAKE([ENABLE_QT_TESTS_FALSE])
m4trace:configure.ac:1415: -1- AM_CONDITIONAL([ENABLE_BIP70], [test x$enable_bip70 = xyes])
m4trace:configure.ac:1415: -1- m4_pattern_allow([^ENABLE_BIP70_TRUE$])
m4trace:configure.ac:1415: -1- m4_pattern_allow([^ENABLE_BIP70_FALSE$])
m4trace:configure.ac:1415: -1- _AM_SUBST_NOTMAKE([ENABLE_BIP70_TRUE])
m4trace:configure.ac:1415: -1- _AM_SUBST_NOTMAKE([ENABLE_BIP70_FALSE])
m4trace:configure.ac:1416: -1- AM_CONDITIONAL([ENABLE_BENCH], [test x$use_bench = xyes])
m4trace:configure.ac:1416: -1- m4_pattern_allow([^ENABLE_BENCH_TRUE$])
m4trace:configure.ac:1416: -1- m4_pattern_allow([^ENABLE_BENCH_FALSE$])
m4trace:configure.ac:1416: -1- _AM_SUBST_NOTMAKE([ENABLE_BENCH_TRUE])
m4trace:configure.ac:1416: -1- _AM_SUBST_NOTMAKE([ENABLE_BENCH_FALSE])
m4trace:configure.ac:1417: -1- AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])
m4trace:configure.ac:1417: -1- m4_pattern_allow([^USE_QRCODE_TRUE$])
m4trace:configure.ac:1417: -1- m4_pattern_allow([^USE_QRCODE_FALSE$])
m4trace:configure.ac:1417: -1- _AM_SUBST_NOTMAKE([USE_QRCODE_TRUE])
m4trace:configure.ac:1417: -1- _AM_SUBST_NOTMAKE([USE_QRCODE_FALSE])
m4trace:configure.ac:1418: -1- AM_CONDITIONAL([USE_LCOV], [test x$use_lcov = xyes])
m4trace:configure.ac:1418: -1- m4_pattern_allow([^USE_LCOV_TRUE$])
m4trace:configure.ac:1418: -1- m4_pattern_allow([^USE_LCOV_FALSE$])
m4trace:configure.ac:1418: -1- _AM_SUBST_NOTMAKE([USE_LCOV_TRUE])
m4trace:configure.ac:1418: -1- _AM_SUBST_NOTMAKE([USE_LCOV_FALSE])
m4trace:configure.ac:1419: -1- AM_CONDITIONAL([GLIBC_BACK_COMPAT], [test x$use_glibc_compat = xyes])
m4trace:configure.ac:1419: -1- m4_pattern_allow([^GLIBC_BACK_COMPAT_TRUE$])
m4trace:configure.ac:1419: -1- m4_pattern_allow([^GLIBC_BACK_COMPAT_FALSE$])
m4trace:configure.ac:1419: -1- _AM_SUBST_NOTMAKE([GLIBC_BACK_COMPAT_TRUE])
m4trace:configure.ac:1419: -1- _AM_SUBST_NOTMAKE([GLIBC_BACK_COMPAT_FALSE])
m4trace:configure.ac:1420: -1- AM_CONDITIONAL([HARDEN], [test x$use_hardening = xyes])
m4trace:configure.ac:1420: -1- m4_pattern_allow([^HARDEN_TRUE$])
m4trace:configure.ac:1420: -1- m4_pattern_allow([^HARDEN_FALSE$])
m4trace:configure.ac:1420: -1- _AM_SUBST_NOTMAKE([HARDEN_TRUE])
m4trace:configure.ac:1420: -1- _AM_SUBST_NOTMAKE([HARDEN_FALSE])
m4trace:configure.ac:1421: -1- AM_CONDITIONAL([ENABLE_HWCRC32], [test x$enable_hwcrc32 = xyes])
m4trace:configure.ac:1421: -1- m4_pattern_allow([^ENABLE_HWCRC32_TRUE$])
m4trace:configure.ac:1421: -1- m4_pattern_allow([^ENABLE_HWCRC32_FALSE$])
m4trace:configure.ac:1421: -1- _AM_SUBST_NOTMAKE([ENABLE_HWCRC32_TRUE])
m4trace:configure.ac:1421: -1- _AM_SUBST_NOTMAKE([ENABLE_HWCRC32_FALSE])
m4trace:configure.ac:1422: -1- AM_CONDITIONAL([ENABLE_SSE41], [test x$enable_sse41 = xyes])
m4trace:configure.ac:1422: -1- m4_pattern_allow([^ENABLE_SSE41_TRUE$])
m4trace:configure.ac:1422: -1- m4_pattern_allow([^ENABLE_SSE41_FALSE$])
m4trace:configure.ac:1422: -1- _AM_SUBST_NOTMAKE([ENABLE_SSE41_TRUE])
m4trace:configure.ac:1422: -1- _AM_SUBST_NOTMAKE([ENABLE_SSE41_FALSE])
m4trace:configure.ac:1423: -1- AM_CONDITIONAL([ENABLE_AVX2], [test x$enable_avx2 = xyes])
m4trace:configure.ac:1423: -1- m4_pattern_allow([^ENABLE_AVX2_TRUE$])
m4trace:configure.ac:1423: -1- m4_pattern_allow([^ENABLE_AVX2_FALSE$])
m4trace:configure.ac:1423: -1- _AM_SUBST_NOTMAKE([ENABLE_AVX2_TRUE])
m4trace:configure.ac:1423: -1- _AM_SUBST_NOTMAKE([ENABLE_AVX2_FALSE])
m4trace:configure.ac:1424: -1- AM_CONDITIONAL([ENABLE_SHANI], [test x$enable_shani = xyes])
m4trace:configure.ac:1424: -1- m4_pattern_allow([^ENABLE_SHANI_TRUE$])
m4trace:configure.ac:1424: -1- m4_pattern_allow([^ENABLE_SHANI_FALSE$])
m4trace:configure.ac:1424: -1- _AM_SUBST_NOTMAKE([ENABLE_SHANI_TRUE])
m4trace:configure.ac:1424: -1- _AM_SUBST_NOTMAKE([ENABLE_SHANI_FALSE])
m4trace:configure.ac:1425: -1- AM_CONDITIONAL([USE_ASM], [test x$use_asm = xyes])
m4trace:configure.ac:1425: -1- m4_pattern_allow([^USE_ASM_TRUE$])
m4trace:configure.ac:1425: -1- m4_pattern_allow([^USE_ASM_FALSE$])
m4trace:configure.ac:1425: -1- _AM_SUBST_NOTMAKE([USE_ASM_TRUE])
m4trace:configure.ac:1425: -1- _AM_SUBST_NOTMAKE([USE_ASM_FALSE])
m4trace:configure.ac:1427: -1- m4_pattern_allow([^CLIENT_VERSION_MAJOR$])
m4trace:configure.ac:1428: -1- m4_pattern_allow([^CLIENT_VERSION_MINOR$])
m4trace:configure.ac:1429: -1- m4_pattern_allow([^CLIENT_VERSION_REVISION$])
m4trace:configure.ac:1430: -1- m4_pattern_allow([^CLIENT_VERSION_BUILD$])
m4trace:configure.ac:1431: -1- m4_pattern_allow([^CLIENT_VERSION_IS_RELEASE$])
m4trace:configure.ac:1432: -1- m4_pattern_allow([^COPYRIGHT_YEAR$])
m4trace:configure.ac:1433: -1- m4_pattern_allow([^COPYRIGHT_HOLDERS$])
m4trace:configure.ac:1434: -1- m4_pattern_allow([^COPYRIGHT_HOLDERS_SUBSTITUTION$])
m4trace:configure.ac:1436: -1- m4_pattern_allow([^COPYRIGHT_HOLDERS_FINAL$])
m4trace:configure.ac:1437: -1- m4_pattern_allow([^CLIENT_VERSION_MAJOR$])
m4trace:configure.ac:1438: -1- m4_pattern_allow([^CLIENT_VERSION_MINOR$])
m4trace:configure.ac:1439: -1- m4_pattern_allow([^CLIENT_VERSION_REVISION$])
m4trace:configure.ac:1440: -1- m4_pattern_allow([^CLIENT_VERSION_BUILD$])
m4trace:configure.ac:1441: -1- m4_pattern_allow([^CLIENT_VERSION_IS_RELEASE$])
m4trace:configure.ac:1442: -1- m4_pattern_allow([^COPYRIGHT_YEAR$])
m4trace:configure.ac:1443: -1- m4_pattern_allow([^COPYRIGHT_HOLDERS$])
m4trace:configure.ac:1444: -1- m4_pattern_allow([^COPYRIGHT_HOLDERS_SUBSTITUTION$])
m4trace:configure.ac:1445: -1- m4_pattern_allow([^COPYRIGHT_HOLDERS_FINAL$])
m4trace:configure.ac:1446: -1- m4_pattern_allow([^BITCOIN_DAEMON_NAME$])
m4trace:configure.ac:1447: -1- m4_pattern_allow([^BITCOIN_GUI_NAME$])
m4trace:configure.ac:1448: -1- m4_pattern_allow([^BITCOIN_CLI_NAME$])
m4trace:configure.ac:1449: -1- m4_pattern_allow([^BITCOIN_TX_NAME$])
m4trace:configure.ac:1450: -1- m4_pattern_allow([^BITCOIN_WALLET_TOOL_NAME$])
m4trace:configure.ac:1452: -1- m4_pattern_allow([^RELDFLAGS$])
m4trace:configure.ac:1453: -1- m4_pattern_allow([^DEBUG_CPPFLAGS$])
m4trace:configure.ac:1454: -1- m4_pattern_allow([^WARN_CXXFLAGS$])
m4trace:configure.ac:1455: -1- m4_pattern_allow([^NOWARN_CXXFLAGS$])
m4trace:configure.ac:1456: -1- m4_pattern_allow([^DEBUG_CXXFLAGS$])
m4trace:configure.ac:1457: -1- m4_pattern_allow([^COMPAT_LDFLAGS$])
m4trace:configure.ac:1458: -1- m4_pattern_allow([^ERROR_CXXFLAGS$])
m4trace:configure.ac:1459: -1- m4_pattern_allow([^GPROF_CXXFLAGS$])
m4trace:configure.ac:1460: -1- m4_pattern_allow([^GPROF_LDFLAGS$])
m4trace:configure.ac:1461: -1- m4_pattern_allow([^HARDENED_CXXFLAGS$])
m4trace:configure.ac:1462: -1- m4_pattern_allow([^HARDENED_CPPFLAGS$])
m4trace:configure.ac:1463: -1- m4_pattern_allow([^HARDENED_LDFLAGS$])
m4trace:configure.ac:1464: -1- m4_pattern_allow([^PIC_FLAGS$])
m4trace:configure.ac:1465: -1- m4_pattern_allow([^PIE_FLAGS$])
m4trace:configure.ac:1466: -1- m4_pattern_allow([^SANITIZER_CXXFLAGS$])
m4trace:configure.ac:1467: -1- m4_pattern_allow([^SANITIZER_LDFLAGS$])
m4trace:configure.ac:1468: -1- m4_pattern_allow([^SSE42_CXXFLAGS$])
m4trace:configure.ac:1469: -1- m4_pattern_allow([^SSE41_CXXFLAGS$])
m4trace:configure.ac:1470: -1- m4_pattern_allow([^AVX2_CXXFLAGS$])
m4trace:configure.ac:1471: -1- m4_pattern_allow([^SHANI_CXXFLAGS$])
m4trace:configure.ac:1472: -1- m4_pattern_allow([^LIBTOOL_APP_LDFLAGS$])
m4trace:configure.ac:1473: -1- m4_pattern_allow([^USE_UPNP$])
m4trace:configure.ac:1474: -1- m4_pattern_allow([^USE_QRCODE$])
m4trace:configure.ac:1475: -1- m4_pattern_allow([^BOOST_LIBS$])
m4trace:configure.ac:1476: -1- m4_pattern_allow([^TESTDEFS$])
m4trace:configure.ac:1477: -1- m4_pattern_allow([^LEVELDB_TARGET_FLAGS$])
m4trace:configure.ac:1478: -1- m4_pattern_allow([^MINIUPNPC_CPPFLAGS$])
m4trace:configure.ac:1479: -1- m4_pattern_allow([^MINIUPNPC_LIBS$])
m4trace:configure.ac:1480: -1- m4_pattern_allow([^CRYPTO_LIBS$])
m4trace:configure.ac:1481: -1- m4_pattern_allow([^SSL_LIBS$])
m4trace:configure.ac:1482: -1- m4_pattern_allow([^EVENT_LIBS$])
m4trace:configure.ac:1483: -1- m4_pattern_allow([^EVENT_PTHREADS_LIBS$])
m4trace:configure.ac:1484: -1- m4_pattern_allow([^ZMQ_LIBS$])
m4trace:configure.ac:1485: -1- m4_pattern_allow([^PROTOBUF_LIBS$])
m4trace:configure.ac:1486: -1- m4_pattern_allow([^QR_LIBS$])
m4trace:configure.ac:1489: -1- AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])
m4trace:configure.ac:1519: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:1523: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:1525: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:1525: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:1525: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:1525: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:1525: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:1525: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:1525: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:1525: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:1525: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
